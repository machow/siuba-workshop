---
title: Arrange
output: html_document
editor_options:
  chunk_output_type: console
chunk: wrangle
jupyter:
  jupytext:
    cell_metadata_filter: 'name,tags,-all'
    notebook_metadata_filter: purview
    text_representation:
      extension: .qmd
      format_name: quarto
      format_version: '1.0'
      jupytext_version: 1.14.4
  kernelspec:
    display_name: Python 3 (ipykernel)
    language: python
    name: python3
---

```{=html}
<iframe class="slide-deck" src="../slides/01c-slides.html"></iframe>
```

Click [here](../slides/01c-slides.qmd) to open the slides full screen.

```{python}
from setup import *
from setup import ___, _
```

### Exercise 1:

Modify the code below to arrange by artist name in **descending** order.

<details><summary>hint</summary>

> You can sort something in descending order, using the `-` operator.

<details><summary>another hint</summary>

> Start by using the pipe operator with `arrange()`. You will need to specify what to arrange by.

</details>
</details>

```{python}
(music_top200

)
```

```{python}
#| jupyter: {source_hidden: true}
#| tags: [solution-code]
(music_top200
  >> arrange(-_.artist)
)
```

What artist is the last observation (row) in the result?

<details><summary>$NOT</summary>Great job!</details>
<details><summary>黃宣</summary>That's not right. Did you arrange in ascending, rather than descending order?</details>
<details><summary>Aaron Smith</summary>Incorrect</details>
<details><summary>Y2K</summary>Incorrect</details>  


### Exercise 2:

What is the first track, if you filter to keep only observations from the country Mexico, and then sort in **ascending order** by track name?

```{python}
(music_top200
  >> ___
  >> arrange(___)
)
```

```{python}
#| jupyter: {source_hidden: true}
#| tags: [solution-code]
(music_top200
  >> filter(_.country == "Mexico")
  >> arrange(_.track_name)
)
```

<details><summary>11 PM</summary>Great job!</details>
<details><summary>一天 (電視劇《想見你》插曲)</summary>Incorrect</details>
<details><summary>everything i wanted</summary>Incorrect</details>
<details><summary>#24</summary>Be sure to filter where country is Mexico</details>  


### Exercise 3: 

Below is code with the arrange verb removed. Modify it to arrange in ascending order..

* first by position
* second by streams

```{python}
(music_top200
  >> ___
)
```

```{python}
#| jupyter: {source_hidden: true}
#| tags: [solution-code]
(music_top200
  >> arrange(_.position, _.streams)
)
```

What country has the position 1 track (The Box) with fewest streams?

<details><summary>Cyprus</summary>That's right! Make sure to double check that the track is named The Box by Roddy Ricch.</details>
<details><summary>United States</summary>Incorrect</details>
<details><summary>Brazil</summary>Incorrect</details>
<details><summary>Luxembourg</summary>Incorrect</details>  


### Exercise 4

What's the shortest song in the top position in the `music_top200` data?

```{python}
#| tags: [empty-code]
# add code below this line



```

```{python}
#| jupyter: {source_hidden: true}
#| tags: [solution-code]
# NOTE: there are multiple ways to get the answer!
(music_top200
  >> arrange(_.position, _.duration)
)
```

<details><summary>Bad Girls, Good Vibes</summary>That's right!</details>
<details><summary>Klop Klop</summary>Incorrect. This is the shortest track in any position. Can you sort to get top position tracks first?</details>
<details><summary>Susamam</summary>Incorrect. This is the longest track in any position. Can you sort to get top position tracks first?</details>
<details><summary>Blockparty</summary>Incorrect. This is the shortest track in the last position.</details>  
