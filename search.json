[
  {
    "objectID": "help/setup.html",
    "href": "help/setup.html",
    "title": "Setup",
    "section": "",
    "text": "Navigate to the GitHub repository for the workshop, click the &lt; &gt; Code dropdown, and select Create codespace on main\n\n\n\nYour codespace will initialize. Once done, you’ll get dropped into a browser version of VS Code. Stay on this page until you see that the terminal has finished installing requirements.txt\n\n\n\nOnce that’s finished, exit VS Code and return to the GitHub repository for the workshop\nClick back into the &lt; &gt; Code dropdown, find the codespace that you just created, and click on the three dots next to it. Click Open in ... and select Open in JupyterLab"
  },
  {
    "objectID": "help/setup.html#opening-the-workshop-in-a-github-codespace",
    "href": "help/setup.html#opening-the-workshop-in-a-github-codespace",
    "title": "Setup",
    "section": "",
    "text": "Navigate to the GitHub repository for the workshop, click the &lt; &gt; Code dropdown, and select Create codespace on main\n\n\n\nYour codespace will initialize. Once done, you’ll get dropped into a browser version of VS Code. Stay on this page until you see that the terminal has finished installing requirements.txt\n\n\n\nOnce that’s finished, exit VS Code and return to the GitHub repository for the workshop\nClick back into the &lt; &gt; Code dropdown, find the codespace that you just created, and click on the three dots next to it. Click Open in ... and select Open in JupyterLab"
  },
  {
    "objectID": "help/setup.html#using-jupyterlab-for-the-code-exercises",
    "href": "help/setup.html#using-jupyterlab-for-the-code-exercises",
    "title": "Setup",
    "section": "Using JupyterLab for the Code Exercises",
    "text": "Using JupyterLab for the Code Exercises\n\nOnce dropped in JupyterLab you’ll see a file browser to the left. To open the interactive exercises as notebooks, navigate to the Code folder.\n\n\n\nTo open a lesson, right click on the file and select Open With –&gt; Notebook\n\n\n\nFrom here, you can interact with and run the code cells. To run a code cell, click the cell and then the Run button at the top of the file (or click ctrl + enter). Start by running the import cell at the top of the file.\n\n\n\nThroughout the notebook you will see cells with prompts to complete a query. You can see their solutions by clicking on the three dots below the prompt cell.\n\n\n\nThroughout the notebooks you will also see multiple choice questions related to the data exercises. You can see their solutions by clicking on the toggle next to them."
  },
  {
    "objectID": "help/setup.html#keep-everything-below",
    "href": "help/setup.html#keep-everything-below",
    "title": "Setup",
    "section": "keep everything below?",
    "text": "keep everything below?\n\ntable of contents\na little background on quarto\n\n\nLesson notebooks\n\ncontain slides and exercises\ncan open on the website (link to one)\n\n\n\nSlides\n\ncan open in speaker view to see notes"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Workshop: Introduction to Siuba (PyData NYC 2023)",
    "section": "",
    "text": "siuba is a data analysis library that makes data science faster. It provides a simple, consistent interface that handles messy, real-life data.\nIn this workshop, you’ll explore data on the top music tracks on Spotify. We’ll cover the 5 key siuba functions that allow you to answer many questions about the popularity of artists in different countries, along with different features in their music.\nThroughout the workshop, we’ll use plotnine to graph the data."
  },
  {
    "objectID": "index.html#who-the-heck-is-teaching",
    "href": "index.html#who-the-heck-is-teaching",
    "title": "Workshop: Introduction to Siuba (PyData NYC 2023)",
    "section": "Who the heck is teaching?",
    "text": "Who the heck is teaching?\n\n\n\nMichael Chow works on python tools for the open source team at Posit, PBC (formerly RStudio). He has a PhD in cognitive psycholgy, and maintains siuba.\n\n\nCharlie Costanzo works primarily as an analytics engineer on public transportation and other civic technology projects (that also use siuba!)"
  },
  {
    "objectID": "index.html#outline",
    "href": "index.html#outline",
    "title": "Workshop: Introduction to Siuba (PyData NYC 2023)",
    "section": "Outline",
    "text": "Outline\n\n(set up): using github codespaces\ndata wrangling: filter, arrange, mutate\nvisualization: plotnine basics\ngrouping and summarizing data\nadditional plot types"
  },
  {
    "objectID": "index.html#requirements",
    "href": "index.html#requirements",
    "title": "Workshop: Introduction to Siuba (PyData NYC 2023)",
    "section": "Requirements",
    "text": "Requirements\nYou should have some familiarity with Python. Some experience with pandas will be useful, but is not necessary!"
  },
  {
    "objectID": "index.html#preparation",
    "href": "index.html#preparation",
    "title": "Workshop: Introduction to Siuba (PyData NYC 2023)",
    "section": "Preparation",
    "text": "Preparation\nWe’ll walk you through these steps:\n\nSetting up github codespaces\nUsing jupyter lab"
  },
  {
    "objectID": "index.html#using-this-site",
    "href": "index.html#using-this-site",
    "title": "Workshop: Introduction to Siuba (PyData NYC 2023)",
    "section": "Using this site",
    "text": "Using this site\nThe content for this workshop is broken into about 12 lessons. Each lesson contains slides, followed by exercises.\nYou can also view all the slides together."
  },
  {
    "objectID": "slides/02-slides.html#variables-1",
    "href": "slides/02-slides.html#variables-1",
    "title": "Visualization with plotnine",
    "section": "Variables",
    "text": "Variables\n(\n  track_features\n  &gt;&gt; filter(_.artist == \"Billie Eilish\")\n)\n\nFirst, write out the pipe with the filter verb.\nThis is the same as you did in the previous chapter.\nNote that whether the name of the data, track_features is right after the ( or on its own line, the code works the same."
  },
  {
    "objectID": "slides/02-slides.html#variables-2",
    "href": "slides/02-slides.html#variables-2",
    "title": "Visualization with plotnine",
    "section": "Variables",
    "text": "Variables\n\nbillie = (\n  track_features\n  &gt;&gt; filter(_.artist == \"Billie Eilish\")\n)\n\n\nThen, write the variable name, followed by the variable operator (an equal sign).\nIn this case, the variable name is billie."
  },
  {
    "objectID": "slides/02-slides.html#visualizing-with-plotnine-2",
    "href": "slides/02-slides.html#visualizing-with-plotnine-2",
    "title": "Visualization with plotnine",
    "section": "Visualizing with plotnine",
    "text": "Visualizing with plotnine\n(billie\n &gt;&gt; ggplot(aes(\"energy\", \"valence\"))\n  + geom_point()\n  + labs(title = \"Billie Eilish hit track features\")  \n)\n\n\nFirst is the data that we’re visualizing. In this case, that is the billie variable you just created."
  },
  {
    "objectID": "slides/02-slides.html#visualizing-with-plotnine-3",
    "href": "slides/02-slides.html#visualizing-with-plotnine-3",
    "title": "Visualization with plotnine",
    "section": "Visualizing with plotnine",
    "text": "Visualizing with plotnine\n(billie\n &gt;&gt; ggplot(aes(\"energy\", \"valence\"))\n  + geom_point()\n  + labs(title = \"Billie Eilish hit track features\")\n)\n\n\nSecond is the mapping of variables in your dataset to aesthetics in your graph.\nAn aesthetic is a visual dimension of a graph that can be used to communicate information.\nIn a scatterplot, your two dimensions are the x axis and the y axis, so you write aes (for “aesthetic”), parentheses, x equals gdpPerCap, y = lifeExp, telling it which variables to place on which axes."
  },
  {
    "objectID": "slides/02-slides.html#visualizing-with-plotnine-4",
    "href": "slides/02-slides.html#visualizing-with-plotnine-4",
    "title": "Visualization with plotnine",
    "section": "Visualizing with plotnine",
    "text": "Visualizing with plotnine\n(billie\n &gt;&gt; ggplot(aes(\"energy\", \"valence\"))\n  + geom_point()\n  + labs(title = \"Billie Eilish hit track features\")\n)\n\n\nThe third step is specifying the type of graph you’re creating. You do that by adding a layer to the graph: use a plus after the ggplot, and then geom underscore point.\nThe “geom” means you’re adding a type of geometric object to the graph, the “point” indicates it’s a scatter plot, where each observation corresponds to one point.\nTogether, these three parts of the code–the data, the aesthetic mapping, and the layer–construct the scatter plot you see here."
  },
  {
    "objectID": "slides/all-slides.html#meet-the-data-spotify-top-200-2",
    "href": "slides/all-slides.html#meet-the-data-spotify-top-200-2",
    "title": "Introduction to Siuba",
    "section": "Meet the data: Spotify top 200",
    "text": "Meet the data: Spotify top 200\n\nmusic_top200\n\n\n\n\n\n\n\n\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n0\nArgentina\n1\nTusa\nKAROL G\n1858666\n200.960\nAmericas\n\n\n1\nArgentina\n2\nTattoo\nRauw Alejandro\n1344382\n202.887\nAmericas\n\n\n2\nArgentina\n3\nHola - Remix\nDalex\n1330011\n249.520\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n12397\nSouth Africa\n198\nBlack And White\nNiall Horan\n11771\n193.090\nAfrica\n\n\n12398\nSouth Africa\n199\nWhen I See U\nFantasia\n11752\n217.347\nAfrica\n\n\n12399\nSouth Africa\n200\nPsycho!\nMASN\n11743\n197.217\nAfrica\n\n\n\n\n\n\nEvery observation–or row–in the DataFrame is a track in the top 200 for a country.\nFor example, in the highlighted code is the track in position 2 (second most streamed) in Argentina. The track name is Tattoo, and has been streamed 1,344,382 times, and is 202 seconds long!"
  },
  {
    "objectID": "slides/all-slides.html#how-code-is-structured-1",
    "href": "slides/all-slides.html#how-code-is-structured-1",
    "title": "Introduction to Siuba",
    "section": "How code is structured",
    "text": "How code is structured\n\n(track_features\n  &gt;&gt; filter(_.artist == \"The Weeknd\")\n\n \n)\n\n\n\n\n\nartist\nalbum\ntrack_name\nenergy\nvalence\ndanceability\nspeechiness\nacousticness\npopularity\nduration\n\n\n\n\n568\nThe Weeknd\nMy Dear Melancholy,\nCall Out My Name\n0.593\n0.175\n0.461\n0.0356\n0.17000\n82\n228.373\n\n\n2753\nThe Weeknd\nBlinding Lights\nBlinding Lights\n0.796\n0.345\n0.513\n0.0629\n0.00147\n75\n201.573\n\n\n3004\nThe Weeknd\nIn Your Eyes (Remix)\nIn Your Eyes (with Doja Cat) - Remix\n0.731\n0.727\n0.679\n0.0319\n0.00518\n81\n237.912\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n23966\nThe Weeknd\nBeauty Behind The Madness\nThe Hills\n0.564\n0.137\n0.585\n0.0515\n0.06710\n83\n242.253\n\n\n24688\nThe Weeknd\nStarboy\nStarboy\n0.587\n0.486\n0.679\n0.2760\n0.14100\n84\n230.453\n\n\n24982\nThe Weeknd\nAfter Hours\nIn Your Eyes\n0.719\n0.717\n0.667\n0.0346\n0.00285\n91\n237.520\n\n\n\n\n23 rows × 10 columns\n\n\n\nThe first action is filtering the data, to keep only observations (rows) where artist is The Weeknd.\nDon’t worry to much about the details for now. Filter is the first thing you’ll learn, once you start the first chapter!"
  },
  {
    "objectID": "slides/all-slides.html#how-code-is-structured-2",
    "href": "slides/all-slides.html#how-code-is-structured-2",
    "title": "Introduction to Siuba",
    "section": "How code is structured",
    "text": "How code is structured\n\n(track_features\n  &gt;&gt; filter(_.artist == \"The Weeknd\")\n  &gt;&gt; ggplot(aes(\"energy\", \"valence\"))\n \n)\n\n\n\nThe next action, ggplot(...), gets ready to make a plot, based on the data in the previous step."
  },
  {
    "objectID": "slides/all-slides.html#how-code-is-structured-3",
    "href": "slides/all-slides.html#how-code-is-structured-3",
    "title": "Introduction to Siuba",
    "section": "How code is structured",
    "text": "How code is structured\n\n(track_features\n  &gt;&gt; filter(_.artist == \"The Weeknd\")\n  &gt;&gt; ggplot(aes(\"energy\", \"valence\"))\n   + geom_point()\n)\n\n\n\nFinally, geom_point() adds points to the plot. Each point comes from a row of data.\nSo in this case each point is a track by The Weeknd."
  },
  {
    "objectID": "slides/all-slides.html#filter-step-1-start-the-block",
    "href": "slides/all-slides.html#filter-step-1-start-the-block",
    "title": "Introduction to Siuba",
    "section": "Filter step 1: start the block",
    "text": "Filter step 1: start the block\n(music_top200\n\n)\n\nA block is written with opening and closing parentheses, and the name of your data in the middle.\nPress enter twice after the name of your data, to make an empty line."
  },
  {
    "objectID": "slides/all-slides.html#filter-step-2-pipe-operator-and-verb-name",
    "href": "slides/all-slides.html#filter-step-2-pipe-operator-and-verb-name",
    "title": "Introduction to Siuba",
    "section": "Filter step 2: pipe operator and verb name",
    "text": "Filter step 2: pipe operator and verb name\n(music_top200\n  &gt;&gt; filter()\n)\n\nNext, write a pipe operator using two greater than signs. It says “take whatever is before the pipe operator, and feed it into the next step.”\nIn this case, the next step will be filter."
  },
  {
    "objectID": "slides/all-slides.html#filter-step-3-write-the-operation",
    "href": "slides/all-slides.html#filter-step-3-write-the-operation",
    "title": "Introduction to Siuba",
    "section": "Filter step 3: write the operation",
    "text": "Filter step 3: write the operation\n(music_top200\n  &gt;&gt; filter(_.position == 1)\n)\n\nFinally, we can complete our first verb.\nWe have all 200 hit songs on the charts, but just want to get the first.\nThe “position equals equals 1” is the condition we are using to filter observations. The “equals equals” may be surprising: it’s what we call a “logical equals”- an operation to compare two values: each position, and the number 1.\nA single equals here would mean something different in python, which you’ll see later.\nLet’s see what this code outputs."
  },
  {
    "objectID": "slides/all-slides.html#arrange-and-filter-1",
    "href": "slides/all-slides.html#arrange-and-filter-1",
    "title": "Introduction to Siuba",
    "section": "arrange and filter",
    "text": "arrange and filter\n\n(music_top200\n  &gt;&gt; filter(_.country == \"United States\")\n\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n7800\nUnited States\n1\nThe Box\nRoddy Ricch\n12987027\n196.653\nAmericas\n\n\n7801\nUnited States\n2\nMyron\nLil Uzi Vert\n9163134\n224.955\nAmericas\n\n\n7802\nUnited States\n3\nBlueberry Faygo\nLil Mosey\n8043475\n162.547\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n7997\nUnited States\n198\nLights Up\nHarry Styles\n1606234\n172.227\nAmericas\n\n\n7998\nUnited States\n199\nWithout Me\nHalsey\n1606153\n201.661\nAmericas\n\n\n7999\nUnited States\n200\nEnemies (feat. DaBaby)\nPost Malone\n1597824\n196.760\nAmericas\n\n\n\n\n200 rows × 7 columns\n\n\n\nLongest duration song in the United States.\nYou start with the music dataset, then a pipe to give the dataset to filter. Then you specify that you want to filter for country equals equals United States.\nThen you use another pipe step."
  },
  {
    "objectID": "slides/all-slides.html#arrange-and-filter-2",
    "href": "slides/all-slides.html#arrange-and-filter-2",
    "title": "Introduction to Siuba",
    "section": "arrange and filter",
    "text": "arrange and filter\n\n(music_top200\n  &gt;&gt; filter(_.country == \"United States\")\n  &gt;&gt; arrange(-_.duration)\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n7841\nUnited States\n42\nAfter Hours\nThe Weeknd\n3672033\n361.027\nAmericas\n\n\n7915\nUnited States\n116\nLife Is Good (feat. Drake, DaBaby & Lil Baby) - Remix\nFuture\n2181930\n315.346\nAmericas\n\n\n7923\nUnited States\n124\nSICKO MODE\nTravis Scott\n2085268\n312.820\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n7832\nUnited States\n33\nStrawberry Peels (feat. Young Thug & Gunna)\nLil Uzi Vert\n4007781\n115.350\nAmericas\n\n\n7853\nUnited States\n54\nCITY OF ANGELS\n24kGoldn\n3443366\n112.493\nAmericas\n\n\n7971\nUnited States\n172\nSkechers\nDripReport\n1731265\n106.000\nAmericas\n\n\n\n\n200 rows × 7 columns\n\n\n\nLongest duration song in the United States.\nThe added pipe line takes the result of the filter, and gives it to arrange. You specify that you want to sort in descending order of duration."
  },
  {
    "objectID": "slides/all-slides.html#arrange-and-filter-5",
    "href": "slides/all-slides.html#arrange-and-filter-5",
    "title": "Introduction to Siuba",
    "section": "arrange and filter",
    "text": "arrange and filter\n\n(music_top200\n  &gt;&gt; filter(_.country == \"United States\")\n\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n7800\nUnited States\n1\nThe Box\nRoddy Ricch\n12987027\n196.653\nAmericas\n\n\n7801\nUnited States\n2\nMyron\nLil Uzi Vert\n9163134\n224.955\nAmericas\n\n\n7802\nUnited States\n3\nBlueberry Faygo\nLil Mosey\n8043475\n162.547\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n7997\nUnited States\n198\nLights Up\nHarry Styles\n1606234\n172.227\nAmericas\n\n\n7998\nUnited States\n199\nWithout Me\nHalsey\n1606153\n201.661\nAmericas\n\n\n7999\nUnited States\n200\nEnemies (feat. DaBaby)\nPost Malone\n1597824\n196.760\nAmericas\n\n\n\n\n200 rows × 7 columns\n\n\n\nLongest duration song in the United States.\nYou start with the music dataset, then a pipe to give the dataset to filter. Then you specify that you want to filter for country equals equals United States.\nThen you use another pipe step."
  },
  {
    "objectID": "slides/all-slides.html#arrange-and-filter-6",
    "href": "slides/all-slides.html#arrange-and-filter-6",
    "title": "Introduction to Siuba",
    "section": "arrange and filter",
    "text": "arrange and filter\n\n(music_top200\n  &gt;&gt; filter(_.country == \"United States\")\n  &gt;&gt; arrange(-_.duration)\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n7841\nUnited States\n42\nAfter Hours\nThe Weeknd\n3672033\n361.027\nAmericas\n\n\n7915\nUnited States\n116\nLife Is Good (feat. Drake, DaBaby & Lil Baby) - Remix\nFuture\n2181930\n315.346\nAmericas\n\n\n7923\nUnited States\n124\nSICKO MODE\nTravis Scott\n2085268\n312.820\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n7832\nUnited States\n33\nStrawberry Peels (feat. Young Thug & Gunna)\nLil Uzi Vert\n4007781\n115.350\nAmericas\n\n\n7853\nUnited States\n54\nCITY OF ANGELS\n24kGoldn\n3443366\n112.493\nAmericas\n\n\n7971\nUnited States\n172\nSkechers\nDripReport\n1731265\n106.000\nAmericas\n\n\n\n\n200 rows × 7 columns\n\n\n\nLongest duration song in the United States.\nThe added pipe line takes the result of the filter, and gives it to arrange. You specify that you want to sort in descending order of duration."
  },
  {
    "objectID": "slides/all-slides.html#using-mutate-to-change-a-variable-1",
    "href": "slides/all-slides.html#using-mutate-to-change-a-variable-1",
    "title": "Introduction to Siuba",
    "section": "Using mutate to change a variable",
    "text": "Using mutate to change a variable\n(music_top200\n  &gt;&gt; mutate(streams = _.streams / 1000)\n)\n\n\nThe slash in Python performs division, so “streams divided by one thousand”."
  },
  {
    "objectID": "slides/all-slides.html#using-mutate-to-change-a-variable-2",
    "href": "slides/all-slides.html#using-mutate-to-change-a-variable-2",
    "title": "Introduction to Siuba",
    "section": "Using mutate to change a variable",
    "text": "Using mutate to change a variable\n(music_top200\n  &gt;&gt; mutate(streams = _.streams / 1000)\n)\n\n\nOn the left, you’re saying you want to replace the existing streams column, by writing streams equals."
  },
  {
    "objectID": "slides/all-slides.html#answering-a-question-1",
    "href": "slides/all-slides.html#answering-a-question-1",
    "title": "Introduction to Siuba",
    "section": "Answering a question",
    "text": "Answering a question\n\n(music_top200\n  &gt;&gt; mutate(ttl_stream_time = _.streams * _.duration)\n \n \n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\nttl_stream_time\n\n\n\n\n0\nArgentina\n1\nTusa\nKAROL G\n1858666\n200.960\nAmericas\n3.735175e+08\n\n\n1\nArgentina\n2\nTattoo\nRauw Alejandro\n1344382\n202.887\nAmericas\n2.727576e+08\n\n\n2\nArgentina\n3\nHola - Remix\nDalex\n1330011\n249.520\nAmericas\n3.318643e+08\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n12397\nSouth Africa\n198\nBlack And White\nNiall Horan\n11771\n193.090\nAfrica\n2.272862e+06\n\n\n12398\nSouth Africa\n199\nWhen I See U\nFantasia\n11752\n217.347\nAfrica\n2.554262e+06\n\n\n12399\nSouth Africa\n200\nPsycho!\nMASN\n11743\n197.217\nAfrica\n2.315919e+06\n\n\n\n\n12400 rows × 8 columns\n\n\n\nWe use mutate to create the ttl_stream_time column."
  },
  {
    "objectID": "slides/all-slides.html#answering-a-question-2",
    "href": "slides/all-slides.html#answering-a-question-2",
    "title": "Introduction to Siuba",
    "section": "Answering a question",
    "text": "Answering a question\n\n(music_top200\n  &gt;&gt; mutate(ttl_stream_time = _.streams * _.duration)\n  &gt;&gt; filter(_.country == \"Costa Rica\")\n \n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\nttl_stream_time\n\n\n\n\n2200\nCosta Rica\n1\nSafaera\nBad Bunny\n338078\n295.177\nAmericas\n9.979285e+07\n\n\n2201\nCosta Rica\n2\nSi Veo a Tu Mamá\nBad Bunny\n244932\n170.972\nAmericas\n4.187651e+07\n\n\n2202\nCosta Rica\n3\nIgnorantes\nBad Bunny\n233113\n210.607\nAmericas\n4.909523e+07\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n2397\nCosta Rica\n198\nRide It\nRegard\n21731\n157.606\nAmericas\n3.424936e+06\n\n\n2398\nCosta Rica\n199\nSola\nManuel Turizo\n21704\n195.044\nAmericas\n4.233235e+06\n\n\n2399\nCosta Rica\n200\nNena Maldición (feat. Lenny Tavárez)\nPaulo Londra\n21684\n228.875\nAmericas\n4.962926e+06\n\n\n\n\n200 rows × 8 columns\n\n\n\nThen we’d use filter to restrict our analysis to only Costa Rica."
  },
  {
    "objectID": "slides/all-slides.html#answering-a-question-3",
    "href": "slides/all-slides.html#answering-a-question-3",
    "title": "Introduction to Siuba",
    "section": "Answering a question",
    "text": "Answering a question\n\n(music_top200\n  &gt;&gt; mutate(ttl_stream_time = _.streams * _.duration)\n  &gt;&gt; filter(_.country == \"Costa Rica\") \n  &gt;&gt; arrange(-_.ttl_stream_time) \n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\nttl_stream_time\n\n\n\n\n2200\nCosta Rica\n1\nSafaera\nBad Bunny\n338078\n295.177\nAmericas\n9.979285e+07\n\n\n2202\nCosta Rica\n3\nIgnorantes\nBad Bunny\n233113\n210.607\nAmericas\n4.909523e+07\n\n\n2222\nCosta Rica\n23\nRené\nResidente\n101872\n457.592\nAmericas\n4.661581e+07\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n2377\nCosta Rica\n178\nDónde Estás\nKHEA\n23177\n153.560\nAmericas\n3.559060e+06\n\n\n2394\nCosta Rica\n195\nBlueberry Faygo\nLil Mosey\n21771\n162.547\nAmericas\n3.538811e+06\n\n\n2397\nCosta Rica\n198\nRide It\nRegard\n21731\n157.606\nAmericas\n3.424936e+06\n\n\n\n\n200 rows × 8 columns\n\n\n\nThen we’d use arrange to sort the data in descending order of our new ttl_stream_time variable."
  },
  {
    "objectID": "slides/all-slides.html#variables-1",
    "href": "slides/all-slides.html#variables-1",
    "title": "Introduction to Siuba",
    "section": "Variables",
    "text": "Variables\n(\n  track_features\n  &gt;&gt; filter(_.artist == \"Billie Eilish\")\n)\n\nFirst, write out the pipe with the filter verb.\nThis is the same as you did in the previous chapter.\nNote that whether the name of the data, track_features is right after the ( or on its own line, the code works the same."
  },
  {
    "objectID": "slides/all-slides.html#variables-2",
    "href": "slides/all-slides.html#variables-2",
    "title": "Introduction to Siuba",
    "section": "Variables",
    "text": "Variables\n\nbillie = (\n  track_features\n  &gt;&gt; filter(_.artist == \"Billie Eilish\")\n)\n\n\nThen, write the variable name, followed by the variable operator (an equal sign).\nIn this case, the variable name is billie."
  },
  {
    "objectID": "slides/all-slides.html#visualizing-with-plotnine-2",
    "href": "slides/all-slides.html#visualizing-with-plotnine-2",
    "title": "Introduction to Siuba",
    "section": "Visualizing with plotnine",
    "text": "Visualizing with plotnine\n(billie\n &gt;&gt; ggplot(aes(\"energy\", \"valence\"))\n  + geom_point()\n  + labs(title = \"Billie Eilish hit track features\")  \n)\n\n\nFirst is the data that we’re visualizing. In this case, that is the billie variable you just created."
  },
  {
    "objectID": "slides/all-slides.html#visualizing-with-plotnine-3",
    "href": "slides/all-slides.html#visualizing-with-plotnine-3",
    "title": "Introduction to Siuba",
    "section": "Visualizing with plotnine",
    "text": "Visualizing with plotnine\n(billie\n &gt;&gt; ggplot(aes(\"energy\", \"valence\"))\n  + geom_point()\n  + labs(title = \"Billie Eilish hit track features\")\n)\n\n\nSecond is the mapping of variables in your dataset to aesthetics in your graph.\nAn aesthetic is a visual dimension of a graph that can be used to communicate information.\nIn a scatterplot, your two dimensions are the x axis and the y axis, so you write aes (for “aesthetic”), parentheses, x equals gdpPerCap, y = lifeExp, telling it which variables to place on which axes."
  },
  {
    "objectID": "slides/all-slides.html#visualizing-with-plotnine-4",
    "href": "slides/all-slides.html#visualizing-with-plotnine-4",
    "title": "Introduction to Siuba",
    "section": "Visualizing with plotnine",
    "text": "Visualizing with plotnine\n(billie\n &gt;&gt; ggplot(aes(\"energy\", \"valence\"))\n  + geom_point()\n  + labs(title = \"Billie Eilish hit track features\")\n)\n\n\nThe third step is specifying the type of graph you’re creating. You do that by adding a layer to the graph: use a plus after the ggplot, and then geom underscore point.\nThe “geom” means you’re adding a type of geometric object to the graph, the “point” indicates it’s a scatter plot, where each observation corresponds to one point.\nTogether, these three parts of the code–the data, the aesthetic mapping, and the layer–construct the scatter plot you see here."
  },
  {
    "objectID": "slides/all-slides.html#the-summarize-verb-1",
    "href": "slides/all-slides.html#the-summarize-verb-1",
    "title": "Introduction to Siuba",
    "section": "The summarize verb",
    "text": "The summarize verb\n\n(music_top200\n  &gt;&gt; summarize(avg_duration = _.duration.mean())\n)\n\n\n\n\n\n\navg_duration\n\n\n\n\n0\n205.990073\n\n\n\n\n1 rows × 1 columns\n\n\n\nTake your music_top200 data, pipe it into summarize.\nThen, specify that you’re creating a summary column called avg_duration.\nNotice that the highlighted code is similar to when created a new column with the mutate verb."
  },
  {
    "objectID": "slides/all-slides.html#the-summarize-verb-2",
    "href": "slides/all-slides.html#the-summarize-verb-2",
    "title": "Introduction to Siuba",
    "section": "The summarize verb",
    "text": "The summarize verb\n\n(music_top200\n  &gt;&gt; summarize(avg_duration = _.duration.mean())\n)\n\n(music_top200\n  &gt;&gt; summarize(avg_duration = _.duration.mean())\n)\n\n\n\n\n\navg_duration\n\n\n\n\n0\n205.990073\n\n\n\n\n1 rows × 1 columns\n\n\n\nThe “duration dot mean, followed by open and close parentheses” is worth examining.\nThis is calling the method mean on the variable duration. The mean method calculates the average of a set of values."
  },
  {
    "objectID": "slides/all-slides.html#summarizing-by-continent-and-position-1",
    "href": "slides/all-slides.html#summarizing-by-continent-and-position-1",
    "title": "Introduction to Siuba",
    "section": "Summarizing by continent and position",
    "text": "Summarizing by continent and position\n\n(music_top200\n\n  &gt;&gt; summarize(\n      min_streams = _.streams.min(),\n      max_streams = _.streams.max()\n  )\n)\n\n\n\n\n\nmin_streams\nmax_streams\n\n\n\n\n0\n1470\n12987027\n\n\n\n\n1 rows × 2 columns\n\n\n\nYou might start by summarizing min and max streams across all the data."
  },
  {
    "objectID": "slides/all-slides.html#summarizing-by-continent-and-position-2",
    "href": "slides/all-slides.html#summarizing-by-continent-and-position-2",
    "title": "Introduction to Siuba",
    "section": "Summarizing by continent and position",
    "text": "Summarizing by continent and position\n\n(music_top200\n  &gt;&gt; filter(_.continent == \"Oceania\", _.position == 1)\n  &gt;&gt; summarize(\n      min_streams = _.streams.min(),\n      max_streams = _.streams.max()\n  )\n)\n\n\n\n\n\nmin_streams\nmax_streams\n\n\n\n\n0\n321272\n1757343\n\n\n\n\n1 rows × 2 columns\n\n\n\nThen, you might add a filter, so your summarize is over one specific grouping (position 1 tracks in Oceania)."
  },
  {
    "objectID": "slides/all-slides.html#summarizing-by-continent-and-position-3",
    "href": "slides/all-slides.html#summarizing-by-continent-and-position-3",
    "title": "Introduction to Siuba",
    "section": "Summarizing by continent and position",
    "text": "Summarizing by continent and position\n\n(music_top200\n  &gt;&gt; group_by(_.continent, _.position)\n  &gt;&gt; summarize(\n      min_streams = _.streams.min(),\n      max_streams = _.streams.max()\n  )\n)\n\n\n\n\n\ncontinent\nposition\nmin_streams\nmax_streams\n\n\n\n\n0\nAfrica\n1\n94422\n94422\n\n\n1\nAfrica\n2\n74689\n74689\n\n\n2\nAfrica\n3\n67552\n67552\n\n\n...\n...\n...\n...\n...\n\n\n997\nOceania\n198\n44570\n225951\n\n\n998\nOceania\n199\n44364\n225492\n\n\n999\nOceania\n200\n44291\n225179\n\n\n\n\n1000 rows × 4 columns\n\n\n\nFinally, you might replace the filter with a group_by.\nNote that you might save this result as a variable and use it in a new pipe or visualization. For example, the new pipe might filter to keep where position is 1, so you can inspect min and max streams for the top tracks across continents."
  },
  {
    "objectID": "slides/00-slides.html#meet-the-data-spotify-top-200-2",
    "href": "slides/00-slides.html#meet-the-data-spotify-top-200-2",
    "title": "Introduction to siuba",
    "section": "Meet the data: Spotify top 200",
    "text": "Meet the data: Spotify top 200\n\nmusic_top200\n\n\n\n\n\n\n\n\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n0\nArgentina\n1\nTusa\nKAROL G\n1858666\n200.960\nAmericas\n\n\n1\nArgentina\n2\nTattoo\nRauw Alejandro\n1344382\n202.887\nAmericas\n\n\n2\nArgentina\n3\nHola - Remix\nDalex\n1330011\n249.520\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n12397\nSouth Africa\n198\nBlack And White\nNiall Horan\n11771\n193.090\nAfrica\n\n\n12398\nSouth Africa\n199\nWhen I See U\nFantasia\n11752\n217.347\nAfrica\n\n\n12399\nSouth Africa\n200\nPsycho!\nMASN\n11743\n197.217\nAfrica\n\n\n\n\n\n\nEvery observation–or row–in the DataFrame is a track in the top 200 for a country.\nFor example, in the highlighted code is the track in position 2 (second most streamed) in Argentina. The track name is Tattoo, and has been streamed 1,344,382 times, and is 202 seconds long!"
  },
  {
    "objectID": "slides/00-slides.html#how-code-is-structured-1",
    "href": "slides/00-slides.html#how-code-is-structured-1",
    "title": "Introduction to siuba",
    "section": "How code is structured",
    "text": "How code is structured\n\n(track_features\n  &gt;&gt; filter(_.artist == \"The Weeknd\")\n\n \n)\n\n\n\n\n\nartist\nalbum\ntrack_name\nenergy\nvalence\ndanceability\nspeechiness\nacousticness\npopularity\nduration\n\n\n\n\n568\nThe Weeknd\nMy Dear Melancholy,\nCall Out My Name\n0.593\n0.175\n0.461\n0.0356\n0.17000\n82\n228.373\n\n\n2753\nThe Weeknd\nBlinding Lights\nBlinding Lights\n0.796\n0.345\n0.513\n0.0629\n0.00147\n75\n201.573\n\n\n3004\nThe Weeknd\nIn Your Eyes (Remix)\nIn Your Eyes (with Doja Cat) - Remix\n0.731\n0.727\n0.679\n0.0319\n0.00518\n81\n237.912\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n23966\nThe Weeknd\nBeauty Behind The Madness\nThe Hills\n0.564\n0.137\n0.585\n0.0515\n0.06710\n83\n242.253\n\n\n24688\nThe Weeknd\nStarboy\nStarboy\n0.587\n0.486\n0.679\n0.2760\n0.14100\n84\n230.453\n\n\n24982\nThe Weeknd\nAfter Hours\nIn Your Eyes\n0.719\n0.717\n0.667\n0.0346\n0.00285\n91\n237.520\n\n\n\n\n23 rows × 10 columns\n\n\n\nThe first action is filtering the data, to keep only observations (rows) where artist is The Weeknd.\nDon’t worry to much about the details for now. Filter is the first thing you’ll learn, once you start the first chapter!"
  },
  {
    "objectID": "slides/00-slides.html#how-code-is-structured-2",
    "href": "slides/00-slides.html#how-code-is-structured-2",
    "title": "Introduction to siuba",
    "section": "How code is structured",
    "text": "How code is structured\n\n(track_features\n  &gt;&gt; filter(_.artist == \"The Weeknd\")\n  &gt;&gt; ggplot(aes(\"energy\", \"valence\"))\n \n)\n\n\n\nThe next action, ggplot(...), gets ready to make a plot, based on the data in the previous step."
  },
  {
    "objectID": "slides/00-slides.html#how-code-is-structured-3",
    "href": "slides/00-slides.html#how-code-is-structured-3",
    "title": "Introduction to siuba",
    "section": "How code is structured",
    "text": "How code is structured\n\n(track_features\n  &gt;&gt; filter(_.artist == \"The Weeknd\")\n  &gt;&gt; ggplot(aes(\"energy\", \"valence\"))\n   + geom_point()\n)\n\n\n\nFinally, geom_point() adds points to the plot. Each point comes from a row of data.\nSo in this case each point is a track by The Weeknd."
  },
  {
    "objectID": "slides/01c-slides.html#arrange-and-filter-1",
    "href": "slides/01c-slides.html#arrange-and-filter-1",
    "title": "The arrange verb",
    "section": "arrange and filter",
    "text": "arrange and filter\n\n(music_top200\n  &gt;&gt; filter(_.country == \"United States\")\n\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n7800\nUnited States\n1\nThe Box\nRoddy Ricch\n12987027\n196.653\nAmericas\n\n\n7801\nUnited States\n2\nMyron\nLil Uzi Vert\n9163134\n224.955\nAmericas\n\n\n7802\nUnited States\n3\nBlueberry Faygo\nLil Mosey\n8043475\n162.547\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n7997\nUnited States\n198\nLights Up\nHarry Styles\n1606234\n172.227\nAmericas\n\n\n7998\nUnited States\n199\nWithout Me\nHalsey\n1606153\n201.661\nAmericas\n\n\n7999\nUnited States\n200\nEnemies (feat. DaBaby)\nPost Malone\n1597824\n196.760\nAmericas\n\n\n\n\n200 rows × 7 columns\n\n\n\nLongest duration song in the United States.\nYou start with the music dataset, then a pipe to give the dataset to filter. Then you specify that you want to filter for country equals equals United States.\nThen you use another pipe step."
  },
  {
    "objectID": "slides/01c-slides.html#arrange-and-filter-2",
    "href": "slides/01c-slides.html#arrange-and-filter-2",
    "title": "The arrange verb",
    "section": "arrange and filter",
    "text": "arrange and filter\n\n(music_top200\n  &gt;&gt; filter(_.country == \"United States\")\n  &gt;&gt; arrange(-_.duration)\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n7841\nUnited States\n42\nAfter Hours\nThe Weeknd\n3672033\n361.027\nAmericas\n\n\n7915\nUnited States\n116\nLife Is Good (feat. Drake, DaBaby & Lil Baby) - Remix\nFuture\n2181930\n315.346\nAmericas\n\n\n7923\nUnited States\n124\nSICKO MODE\nTravis Scott\n2085268\n312.820\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n7832\nUnited States\n33\nStrawberry Peels (feat. Young Thug & Gunna)\nLil Uzi Vert\n4007781\n115.350\nAmericas\n\n\n7853\nUnited States\n54\nCITY OF ANGELS\n24kGoldn\n3443366\n112.493\nAmericas\n\n\n7971\nUnited States\n172\nSkechers\nDripReport\n1731265\n106.000\nAmericas\n\n\n\n\n200 rows × 7 columns\n\n\n\nLongest duration song in the United States.\nThe added pipe line takes the result of the filter, and gives it to arrange. You specify that you want to sort in descending order of duration."
  },
  {
    "objectID": "slides/03a-slides.html#the-summarize-verb-1",
    "href": "slides/03a-slides.html#the-summarize-verb-1",
    "title": "Summarizing data",
    "section": "The summarize verb",
    "text": "The summarize verb\n\n(music_top200\n  &gt;&gt; summarize(avg_duration = _.duration.mean())\n)\n\n\n\n\n\n\navg_duration\n\n\n\n\n0\n205.990073\n\n\n\n\n1 rows × 1 columns\n\n\n\nTake your music_top200 data, pipe it into summarize.\nThen, specify that you’re creating a summary column called avg_duration.\nNotice that the highlighted code is similar to when created a new column with the mutate verb."
  },
  {
    "objectID": "slides/03a-slides.html#the-summarize-verb-2",
    "href": "slides/03a-slides.html#the-summarize-verb-2",
    "title": "Summarizing data",
    "section": "The summarize verb",
    "text": "The summarize verb\n\n(music_top200\n  &gt;&gt; summarize(avg_duration = _.duration.mean())\n)\n\n(music_top200\n  &gt;&gt; summarize(avg_duration = _.duration.mean())\n)\n\n\n\n\n\navg_duration\n\n\n\n\n0\n205.990073\n\n\n\n\n1 rows × 1 columns\n\n\n\nThe “duration dot mean, followed by open and close parentheses” is worth examining.\nThis is calling the method mean on the variable duration. The mean method calculates the average of a set of values."
  },
  {
    "objectID": "slides/03b-slides.html#summarizing-by-continent-and-position-1",
    "href": "slides/03b-slides.html#summarizing-by-continent-and-position-1",
    "title": "The group_by verb",
    "section": "Summarizing by continent and position",
    "text": "Summarizing by continent and position\n\n(music_top200\n\n  &gt;&gt; summarize(\n      min_streams = _.streams.min(),\n      max_streams = _.streams.max()\n  )\n)\n\n\n\n\n\nmin_streams\nmax_streams\n\n\n\n\n0\n1470\n12987027\n\n\n\n\n1 rows × 2 columns\n\n\n\nYou might start by summarizing min and max streams across all the data."
  },
  {
    "objectID": "slides/03b-slides.html#summarizing-by-continent-and-position-2",
    "href": "slides/03b-slides.html#summarizing-by-continent-and-position-2",
    "title": "The group_by verb",
    "section": "Summarizing by continent and position",
    "text": "Summarizing by continent and position\n\n(music_top200\n  &gt;&gt; filter(_.continent == \"Oceania\", _.position == 1)\n  &gt;&gt; summarize(\n      min_streams = _.streams.min(),\n      max_streams = _.streams.max()\n  )\n)\n\n\n\n\n\nmin_streams\nmax_streams\n\n\n\n\n0\n321272\n1757343\n\n\n\n\n1 rows × 2 columns\n\n\n\nThen, you might add a filter, so your summarize is over one specific grouping (position 1 tracks in Oceania)."
  },
  {
    "objectID": "slides/03b-slides.html#summarizing-by-continent-and-position-3",
    "href": "slides/03b-slides.html#summarizing-by-continent-and-position-3",
    "title": "The group_by verb",
    "section": "Summarizing by continent and position",
    "text": "Summarizing by continent and position\n\n(music_top200\n  &gt;&gt; group_by(_.continent, _.position)\n  &gt;&gt; summarize(\n      min_streams = _.streams.min(),\n      max_streams = _.streams.max()\n  )\n)\n\n\n\n\n\ncontinent\nposition\nmin_streams\nmax_streams\n\n\n\n\n0\nAfrica\n1\n94422\n94422\n\n\n1\nAfrica\n2\n74689\n74689\n\n\n2\nAfrica\n3\n67552\n67552\n\n\n...\n...\n...\n...\n...\n\n\n997\nOceania\n198\n44570\n225951\n\n\n998\nOceania\n199\n44364\n225492\n\n\n999\nOceania\n200\n44291\n225179\n\n\n\n\n1000 rows × 4 columns\n\n\n\nFinally, you might replace the filter with a group_by.\nNote that you might save this result as a variable and use it in a new pipe or visualization. For example, the new pipe might filter to keep where position is 1, so you can inspect min and max streams for the top tracks across continents."
  },
  {
    "objectID": "slides/01d-slides.html#using-mutate-to-change-a-variable-1",
    "href": "slides/01d-slides.html#using-mutate-to-change-a-variable-1",
    "title": "The mutate verb",
    "section": "Using mutate to change a variable",
    "text": "Using mutate to change a variable\n(music_top200\n  &gt;&gt; mutate(streams = _.streams / 1000)\n)\n\n\nThe slash in Python performs division, so “streams divided by one thousand”."
  },
  {
    "objectID": "slides/01d-slides.html#using-mutate-to-change-a-variable-2",
    "href": "slides/01d-slides.html#using-mutate-to-change-a-variable-2",
    "title": "The mutate verb",
    "section": "Using mutate to change a variable",
    "text": "Using mutate to change a variable\n(music_top200\n  &gt;&gt; mutate(streams = _.streams / 1000)\n)\n\n\nOn the left, you’re saying you want to replace the existing streams column, by writing streams equals."
  },
  {
    "objectID": "slides/01d-slides.html#answering-a-question-1",
    "href": "slides/01d-slides.html#answering-a-question-1",
    "title": "The mutate verb",
    "section": "Answering a question",
    "text": "Answering a question\n\n(music_top200\n  &gt;&gt; mutate(ttl_stream_time = _.streams * _.duration)\n \n \n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\nttl_stream_time\n\n\n\n\n0\nArgentina\n1\nTusa\nKAROL G\n1858666\n200.960\nAmericas\n3.735175e+08\n\n\n1\nArgentina\n2\nTattoo\nRauw Alejandro\n1344382\n202.887\nAmericas\n2.727576e+08\n\n\n2\nArgentina\n3\nHola - Remix\nDalex\n1330011\n249.520\nAmericas\n3.318643e+08\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n12397\nSouth Africa\n198\nBlack And White\nNiall Horan\n11771\n193.090\nAfrica\n2.272862e+06\n\n\n12398\nSouth Africa\n199\nWhen I See U\nFantasia\n11752\n217.347\nAfrica\n2.554262e+06\n\n\n12399\nSouth Africa\n200\nPsycho!\nMASN\n11743\n197.217\nAfrica\n2.315919e+06\n\n\n\n\n12400 rows × 8 columns\n\n\n\nWe use mutate to create the ttl_stream_time column."
  },
  {
    "objectID": "slides/01d-slides.html#answering-a-question-2",
    "href": "slides/01d-slides.html#answering-a-question-2",
    "title": "The mutate verb",
    "section": "Answering a question",
    "text": "Answering a question\n\n(music_top200\n  &gt;&gt; mutate(ttl_stream_time = _.streams * _.duration)\n  &gt;&gt; filter(_.country == \"Costa Rica\")\n \n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\nttl_stream_time\n\n\n\n\n2200\nCosta Rica\n1\nSafaera\nBad Bunny\n338078\n295.177\nAmericas\n9.979285e+07\n\n\n2201\nCosta Rica\n2\nSi Veo a Tu Mamá\nBad Bunny\n244932\n170.972\nAmericas\n4.187651e+07\n\n\n2202\nCosta Rica\n3\nIgnorantes\nBad Bunny\n233113\n210.607\nAmericas\n4.909523e+07\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n2397\nCosta Rica\n198\nRide It\nRegard\n21731\n157.606\nAmericas\n3.424936e+06\n\n\n2398\nCosta Rica\n199\nSola\nManuel Turizo\n21704\n195.044\nAmericas\n4.233235e+06\n\n\n2399\nCosta Rica\n200\nNena Maldición (feat. Lenny Tavárez)\nPaulo Londra\n21684\n228.875\nAmericas\n4.962926e+06\n\n\n\n\n200 rows × 8 columns\n\n\n\nThen we’d use filter to restrict our analysis to only Costa Rica."
  },
  {
    "objectID": "slides/01d-slides.html#answering-a-question-3",
    "href": "slides/01d-slides.html#answering-a-question-3",
    "title": "The mutate verb",
    "section": "Answering a question",
    "text": "Answering a question\n\n(music_top200\n  &gt;&gt; mutate(ttl_stream_time = _.streams * _.duration)\n  &gt;&gt; filter(_.country == \"Costa Rica\") \n  &gt;&gt; arrange(-_.ttl_stream_time) \n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\nttl_stream_time\n\n\n\n\n2200\nCosta Rica\n1\nSafaera\nBad Bunny\n338078\n295.177\nAmericas\n9.979285e+07\n\n\n2202\nCosta Rica\n3\nIgnorantes\nBad Bunny\n233113\n210.607\nAmericas\n4.909523e+07\n\n\n2222\nCosta Rica\n23\nRené\nResidente\n101872\n457.592\nAmericas\n4.661581e+07\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n2377\nCosta Rica\n178\nDónde Estás\nKHEA\n23177\n153.560\nAmericas\n3.559060e+06\n\n\n2394\nCosta Rica\n195\nBlueberry Faygo\nLil Mosey\n21771\n162.547\nAmericas\n3.538811e+06\n\n\n2397\nCosta Rica\n198\nRide It\nRegard\n21731\n157.606\nAmericas\n3.424936e+06\n\n\n\n\n200 rows × 8 columns\n\n\n\nThen we’d use arrange to sort the data in descending order of our new ttl_stream_time variable."
  },
  {
    "objectID": "slides/01b-slides.html#filter-step-1-start-the-block",
    "href": "slides/01b-slides.html#filter-step-1-start-the-block",
    "title": "The filter verb",
    "section": "Filter step 1: start the block",
    "text": "Filter step 1: start the block\n(music_top200\n\n)\n\nA block is written with opening and closing parentheses, and the name of your data in the middle.\nPress enter twice after the name of your data, to make an empty line."
  },
  {
    "objectID": "slides/01b-slides.html#filter-step-2-pipe-operator-and-verb-name",
    "href": "slides/01b-slides.html#filter-step-2-pipe-operator-and-verb-name",
    "title": "The filter verb",
    "section": "Filter step 2: pipe operator and verb name",
    "text": "Filter step 2: pipe operator and verb name\n(music_top200\n  &gt;&gt; filter()\n)\n\nNext, write a pipe operator using two greater than signs. It says “take whatever is before the pipe operator, and feed it into the next step.”\nIn this case, the next step will be filter."
  },
  {
    "objectID": "slides/01b-slides.html#filter-step-3-write-the-operation",
    "href": "slides/01b-slides.html#filter-step-3-write-the-operation",
    "title": "The filter verb",
    "section": "Filter step 3: write the operation",
    "text": "Filter step 3: write the operation\n(music_top200\n  &gt;&gt; filter(_.position == 1)\n)\n\nFinally, we can complete our first verb.\nWe have all 200 hit songs on the charts, but just want to get the first.\nThe “position equals equals 1” is the condition we are using to filter observations. The “equals equals” may be surprising: it’s what we call a “logical equals”- an operation to compare two values: each position, and the number 1.\nA single equals here would mean something different in python, which you’ll see later.\nLet’s see what this code outputs."
  },
  {
    "objectID": "code/02c-aesthetics.html",
    "href": "code/02c-aesthetics.html",
    "title": "Aesthetics",
    "section": "",
    "text": "Click here to open the slides full screen.\n\nfrom setup import ___\n\nfrom siuba import *\nfrom plotnine import *\n\nfrom music_top200 import music_top200, track_features\n\nThe plot below shows all top 200 hundred hits for Eric Chou across countries. Use the code cell below to recreate it.\n(Note: running the code won’t delete the plot!).\n\n# your code here\n\n\n\n#\n\n\nExpand the code cell below to see the solution.\n\n\n\n\n\n\nShow solution\n\n\n\n\n\n(music_top200\n  &gt;&gt; filter(_.artist == \"Eric Chou\")\n  &gt;&gt; ggplot(aes(\"position\", \"streams\", color = \"country\"))\n   + geom_point()\n   + labs(title = \"Top 200 hits for Eric Chou across countries\")\n)\n\n\n\n\n\n\n\nExercise 2:\nUse plots of the data for the artists Snelle, Bazzi, and Davyi, to answer the questions below.\nYou may need to write and run code multiple times, and produce multiple plots.\n\n(\n    \n)\n\n()\n\n\n\n\n\n\n\n\nShow solution\n\n\n\n\n\np1 = (music_top200\n  &gt;&gt; filter(_.artist.isin([\"Snelle\", \"Bazzi\", \"Dayvi\"]))\n  &gt;&gt; ggplot(aes(\"position\", \"streams\", color = \"country\"))\n   + geom_point()\n   + facet_wrap(\"~artist\")\n)\n\np2 = (music_top200\n  &gt;&gt; filter(_.artist.isin([\"Snelle\", \"Bazzi\", \"Dayvi\"]))\n  &gt;&gt; ggplot(aes(\"position\", \"streams\", color = \"continent\"))\n   + geom_point()\n   + facet_wrap(\"~artist\")\n)\n\nprint(p1, p2)\n\n\n\n\n \n\n\n\n\n\n\n\nWhich of these artists have hit tracks in the most continents?\n\n\nSnelle\n\nIncorrect. Did you try using the color aesthetic?\n\n\n\nBazzi\n\nThat’s right. Bazzi has hits on every continent.\n\n\n\nDayvi\n\nIncorrect. Did you try using the color aesthetic?\n\nHow many countries does Dayvi have hit tracks in?\n\n\n1\n\nIncorrect.\n\n\n\n2\n\nThat’s right.\n\n\n\n3\n\nIncorrect."
  },
  {
    "objectID": "code/03c-summary-viz.html",
    "href": "code/03c-summary-viz.html",
    "title": "Visualizing summaries",
    "section": "",
    "text": "Click here to open the slides full screen.\n\nfrom setup import ___\n\nfrom siuba import *\nfrom plotnine import *\n\nfrom music_top200 import music_top200, track_features\n\n\nExercise 1\n\n\nExercise 2\n\n\nExercise 3"
  },
  {
    "objectID": "code/04c-histograms.html",
    "href": "code/04c-histograms.html",
    "title": "Histograms",
    "section": "",
    "text": "from setup import *\nfrom setup import ___, _\n\nimport slides from ‘../slides/03c-slides.markdown’\n&lt;RevealSlides :slides=“slides” /&gt;"
  },
  {
    "objectID": "code/02a-intro-data-viz.html",
    "href": "code/02a-intro-data-viz.html",
    "title": "Getting started",
    "section": "",
    "text": "Click here to open the slides full screen.\n\nfrom setup import ___\n\nfrom siuba import *\nfrom plotnine import *\n\nfrom music_top200 import music_top200, track_features\n\n\nExercise 1:\nIn this exercise, there are two code cells. The first defines variables for tracks by different artists. The second creates a plot.\nRead through the code and plot, and then modify it to answer the question beneath.\n\nroddy = (\n  track_features\n  &gt;&gt; filter(_.artist == \"Roddy Ricch\")\n)\n\nbillie = (\n  track_features\n  &gt;&gt; filter(_.artist == \"Billie Eilish\")\n)\n\nother = (\n  track_features\n  &gt;&gt; filter(_.artist == \"ITZY\")\n)\n\nother\n\n\n\n\n\nartist\nalbum\ntrack_name\nenergy\nvalence\ndanceability\nspeechiness\nacousticness\npopularity\nduration\n\n\n\n\n1431\nITZY\nIT'z Different\n달라달라 (DALLA DALLA)\n0.853\n0.713\n0.790\n0.0665\n0.00116\n73\n199.874\n\n\n21148\nITZY\nIT'z Different\n달라달라 DALLA DALLA\n0.853\n0.713\n0.790\n0.0665\n0.00116\n57\n199.874\n\n\n22388\nITZY\nIt'z Me\nWANNABE\n0.911\n0.640\n0.809\n0.0617\n0.00795\n81\n191.242\n\n\n25287\nITZY\nIT'z ICY\nICY\n0.904\n0.814\n0.801\n0.0834\n0.03240\n72\n191.142\n\n\n\n\n4 rows × 10 columns\n\n\nThe code below plots hits for the roddy variable. Note that you could swap out roddy for any of the other two variables above.\n\n(roddy\n  &gt;&gt; ggplot(aes(\"danceability\", \"speechiness\"))\n   + geom_point()\n   + expand_limits(x = [0, 1], y = [0, 1])\n)\n\n\n\n\nWho has the widest range of danceability? (i.e. biggist difference between highest and lowest)\n\n\nRoddy Ricch\n\nTry again.\n\n\n\nBillie Eilish\n\nThat’s right!\n\n\n\nITZY\n\nTry again. All the ITZY songs shown have roughly the same danceability.\n\n\n\n\n\n\n\nShow solution\n\n\n\n\n\n# Note that this code use a special pandas function to put all\n# the data together into a single variable (all_together), to\n# make it easy to see all the data together.\n# To answer the question, you should replace all_together, with\n# the relevant variable (billie, other, etc..)\n\nimport pandas as pd\nall_together = pd.concat([roddy, billie, other])\n\n(all_together\n  &gt;&gt; ggplot(aes(\"danceability\", \"speechiness\", color = \"artist\"))\n   + geom_point()\n   + expand_limits(x = [0, 1], y = [0, 1])\n)\n\n\n\n\n\n\n\n\nExercise 2:\nDoes it look like there any extremely popular songs over 15 minutes long?\nThere is not one concrete answer to this question. Make a plot below, and come up with an answer you might share with another person.\n\n\nhint\n\n\nThe duration column contains the length of each song in seconds. Use this with the popularity column.\n\n\n\n(track_features\n  &gt;&gt; ggplot()\n\n)\n\n\n\n\n\n\n\n\n\n\nShow solution\n\n\n\n\n\n(track_features\n  &gt;&gt; ggplot(aes(\"duration\", \"popularity\"))\n   + geom_point()\n)\n\n\n\n\n\n\n\n\npossible answers\n\nscreencast\n\n\n\nExercise 3:\nDoes the lowest energy track belong to a “low energy” artist? In this exercise, we’ll explore the questions using tracks by two artists.\nHere is the track data sorted by energy.\n\n# this code is to help you examine track energy levels \n(\n  track_features\n  &gt;&gt; arrange(_.energy)\n)\n\n\n\n\n\nartist\nalbum\ntrack_name\nenergy\nvalence\ndanceability\nspeechiness\nacousticness\npopularity\nduration\n\n\n\n\n1003\nSimon Smith\nLoops\nBlagaslavlaju vas\n0.000778\n0.000\n0.779\n0.4210\n0.99400\n0\n36.038\n\n\n5995\nDMS\nPrepáčte\nNič\n0.000791\n0.000\n0.571\n0.4460\n0.95000\n25\n37.355\n\n\n16689\nPeter Simon\nSnowrain\nSnowrain\n0.003480\n0.373\n0.472\n0.0517\n0.99600\n0\n31.000\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n22695\nNino Xypolitas\nEpireastika\nEime Enas Allos - Original\n0.996000\n0.517\n0.644\n0.1030\n0.00346\n34\n214.693\n\n\n17072\nOtira\nSoundboy Burnin’\nSoundboy Burnin’\n0.997000\n0.327\n0.568\n0.2330\n0.00299\n14\n173.846\n\n\n11069\nScooter\nNo Time To Chill\nHow Much Is the Fish?\n0.999000\n0.615\n0.533\n0.0786\n0.00130\n48\n226.200\n\n\n\n\n25321 rows × 10 columns\n\n\nNotice that Simon Smith has the lowest energy song (“Blagaslavlaju vas”), while Scooter has the highest energy song (“How Much is the Fish?”).\nFirst, filter the track_features data to create a variable named artist_low that has only tracks by the artist Simon Smith.\n\n# create artist_low variable here\n\nartist_low = (\n    \n)\n\nNext, create a variable named artist_high with tracks by the artist Scooter, who has the highest energy song.\n\n# create artist_high variable here\n\nBased on separate plots of their data, does the artist with the lowest energy track seem to have lower energy songs in general?\n\n# examine plots of each artist, to answer question\n# note, we're examining energy, so to make a scatterplot you could set\n# the second variable to anything interesting (e.g. popularity)\n\n(___\n\n)\n\n⚠️: Don't forget to replace all the blanks!\n\n\n\n\n\n\n\n\nShow solution\n\n\n\n\n\nartist_low = track_features &gt;&gt; filter(_.artist == \"Simon Smith\")\n\nartist_high = track_features &gt;&gt; filter(_.artist == \"Scooter\")\n\nggplot(artist_low, aes(\"energy\", \"popularity\")) + geom_point()\n\n#ggplot(artist_high, aes(\"energy\", \"popularity\")) + geom_point()\n\n\n\n\n\n\n\n\npossible answer\n\nThe high energy artist, Scooter, seems to only have high energy songs (from about .9 to 1 energy).\nOn the other hand, the low energy artist, Simon Smith, seems to have a wide range of energy values (from about 0 to 1 energy)."
  },
  {
    "objectID": "code/04a-line-plots.html",
    "href": "code/04a-line-plots.html",
    "title": "Line plots",
    "section": "",
    "text": "from setup import *\nfrom setup import ___, _\n\nimport slides from ‘../slides/03c-slides.markdown’\n&lt;RevealSlides :slides=“slides” /&gt;"
  },
  {
    "objectID": "code/03b-group-by.html",
    "href": "code/03b-group-by.html",
    "title": "Group by",
    "section": "",
    "text": "Click here to open the slides full screen.\n\nfrom setup import ___\n\nfrom siuba import *\nfrom plotnine import *\n\nfrom music_top200 import music_top200, track_features\n\n\nExercise 1:\nModify the code below so it calculates max popularity and average danceability for each artist.\n\nartists = (track_features\n  &gt;&gt; summarize(\n      max_popularity = _.popularity.max(),\n      avg_danceability = _.danceability.mean()\n  )\n)\nartists\n\n\n\n\n\nmax_popularity\navg_danceability\n\n\n\n\n0\n99\n0.677937\n\n\n\n\n1 rows × 2 columns\n\n\nMake a scatterplot of the data.\n\n\n\n\n\n\nShow solution\n\n\n\n\n\nartists = (track_features\n  &gt;&gt; group_by(_.artist)\n  &gt;&gt; summarize(\n      max_popularity = _.popularity.max(),\n      avg_danceability = _.danceability.mean()\n  )\n)\n\nprint(artists)\n\n(artists\n  &gt;&gt; ggplot(aes(\"max_popularity\", \"avg_danceability\"))\n   + geom_point()\n)\n\n            artist  max_popularity  avg_danceability\n0     #LikeMe Cast              44             0.413\n1     #TocoParaVos              42             0.815\n2             $NOT              43             0.847\n...            ...             ...               ...\n7190            黃莉               0             0.544\n7191            黃齡              37             0.563\n7192           NaN              36             0.245\n\n[7193 rows x 3 columns]\n\n\n\n\n\n\n\nIn the plot above, what strange thing is going on with the distribution of max popularity?\n\n\npossible answer\n\nThere are many artists with a max popularity of 0!\n\n\n\nExercise 2:\nIn the last exercise of the facets chapter, you examined track features for three artists.\n\n# This code keeps the 3 artists listed ----\n\nartists_to_keep = [\"Billie Eilish\", \"ITZY\", \"Roddy Ricch\"]\n\nsome_artists = (\n  track_features\n  &gt;&gt; filter(_.artist.isin(artists_to_keep))\n)\n\n#uncomment line below to see data\n#some_artists\n\nWe used a plot and intuition to judge who tended to have highest energy and valence tracks.\n\n# This code plots the data ----\n(some_artists\n  &gt;&gt; ggplot(aes(\"energy\", \"valence\", color = \"artist\"))\n   + geom_point()\n   + facet_wrap(\"~artist\", nrow = 1)\n   + labs(title = \"Song features across 3 artists\")\n)\n\n\n\n\nNow you should be able to answer the question more directly!\nUse a grouped summarize to calculate the mean energy and valence for each artist.\n\n# summarizing mean energy and valence for each artist\n\n\n\n\n\n\n\nShow solution\n\n\n\n\n\n# This code plots the data ----\n(some_artists\n  &gt;&gt; group_by(_.artist)\n  &gt;&gt; summarize(avg_energy = _.energy.mean(), avg_valence = _.valence.mean())\n)\n\n\n\n\n\nartist\navg_energy\navg_valence\n\n\n\n\n0\nBillie Eilish\n0.321004\n0.266948\n\n\n1\nITZY\n0.880250\n0.720000\n\n\n2\nRoddy Ricch\n0.571444\n0.457333\n\n\n\n\n3 rows × 3 columns\n\n\n\n\nQ: In this data, which artist has the lowest average energy, and what is its value?\n\n\nanswer\n\nBillie Eilish, 0.321004\n\nQ: What about for lowest average valence?\n\n\nanswer\n\nBillie Eilish, 0.266948"
  },
  {
    "objectID": "code/01-intro-data-science.html",
    "href": "code/01-intro-data-science.html",
    "title": "Course welcome",
    "section": "",
    "text": "Click here to open the slides full screen.\n\nfrom setup import ___\n\nfrom siuba import *\nfrom plotnine import *\n\nfrom music_top200 import music_top200, track_features\n\n\nExercise 1: inspecting music data\nTry changing to “United States”. This should return only the top 200 hits from the United States.\n\n(music_top200\n  &gt;&gt; filter(_.country == \"Mexico\")\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n8200\nMexico\n1\nSafaera\nBad Bunny\n7948565\n295.177\nAmericas\n\n\n8201\nMexico\n2\nSi Veo a Tu Mamá\nBad Bunny\n7535381\n170.972\nAmericas\n\n\n8202\nMexico\n3\nLa Difícil\nBad Bunny\n5459673\n163.084\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n8397\nMexico\n198\nVete Ya\nValentín Elizalde\n559399\n157.760\nAmericas\n\n\n8398\nMexico\n199\nEl Mundo a Tus Pies\nGrupo Firme\n559065\n176.227\nAmericas\n\n\n8399\nMexico\n200\nVerte Ir\nDJ Luian\n558925\n267.500\nAmericas\n\n\n\n\n200 rows × 7 columns\n\n\nWhich artist has a track in the second position on the United States charts?\n\n\nRoddy Ricch\n\nTry again. That artist is in the first position.\n\n\n\nLil Uzi Vert\n\nThat’s right!\n\n\n\nHalsey\n\nTry again. That artist is the second from last position (198).\n\n\n\nExercise 2: inspecting track_features data\nUse the options below, to examine tracks by different artists. Can you find the options that order tracks from highest energy to lowest?\n\n# The Weeknd\n# Bad Bunny\n# Roddy Ricch\n# Justin Bieber\n#_.popularity\n#-_.popularity\n#_.energy\n#-_.energy\n(track_features\n  &gt;&gt; arrange(-_.popularity)\n  &gt;&gt; filter(_.artist == \"The Weeknd\")\n)\n\n\n\n\n\nartist\nalbum\ntrack_name\nenergy\nvalence\ndanceability\nspeechiness\nacousticness\npopularity\nduration\n\n\n\n\n24982\nThe Weeknd\nAfter Hours\nIn Your Eyes\n0.719\n0.7170\n0.667\n0.0346\n0.00285\n91\n237.520\n\n\n9283\nThe Weeknd\nAfter Hours\nAfter Hours\n0.572\n0.1430\n0.664\n0.0305\n0.08110\n84\n361.027\n\n\n24688\nThe Weeknd\nStarboy\nStarboy\n0.587\n0.4860\n0.679\n0.2760\n0.14100\n84\n230.453\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17383\nThe Weeknd\nHeartless\nHeartless\n0.750\n0.1980\n0.531\n0.1110\n0.00632\n60\n200.080\n\n\n3888\nThe Weeknd\nAfter Hours (Deluxe)\nNothing Compares - Bonus Track\n0.577\n0.0398\n0.524\n0.0358\n0.00253\n49\n222.307\n\n\n22430\nThe Weeknd\nAfter Hours (Deluxe)\nMissed You - Bonus Track\n0.364\n0.4480\n0.716\n0.0866\n0.10700\n48\n144.540\n\n\n\n\n23 rows × 10 columns\n\n\n\n\nExercise 3: Plotting track features\nHere is one kind of plot you will learn to make in the course.\n\n#        - popularity\n#        - acousticness\n#        - danceability\n(track_features\n  &gt;&gt; filter(_.artist == \"The Weeknd\")\n  &gt;&gt; ggplot(aes(\"energy\", \"valence\", size = \"popularity\", color = \"album\", label = \"track_name\"))\n    + geom_point()\n    + geom_text(nudge_y = .05, size = 10)\n)"
  },
  {
    "objectID": "code/03a-summarize.html",
    "href": "code/03a-summarize.html",
    "title": "Summarize",
    "section": "",
    "text": "Click here to open the slides full screen.\n\nfrom setup import ___\n\nfrom siuba import *\nfrom plotnine import *\n\nfrom music_top200 import music_top200, track_features\n\n\nExercise 1:\nThe code below calculates the average duration.\n\nUncomment the summarize verb.\nChange it to calculate median duration.\nMake sure to change the resulting column name to indicate its a median.\n\n\n(music_top200\n  #&gt;&gt; summarize(avg_duration = _.duration.mean())\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n0\nArgentina\n1\nTusa\nKAROL G\n1858666\n200.960\nAmericas\n\n\n1\nArgentina\n2\nTattoo\nRauw Alejandro\n1344382\n202.887\nAmericas\n\n\n2\nArgentina\n3\nHola - Remix\nDalex\n1330011\n249.520\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n12397\nSouth Africa\n198\nBlack And White\nNiall Horan\n11771\n193.090\nAfrica\n\n\n12398\nSouth Africa\n199\nWhen I See U\nFantasia\n11752\n217.347\nAfrica\n\n\n12399\nSouth Africa\n200\nPsycho!\nMASN\n11743\n197.217\nAfrica\n\n\n\n\n12400 rows × 7 columns\n\n\n\n\n\n\n\n\nShow solution\n\n\n\n\n\n(music_top200\n  &gt;&gt; summarize(median_duration = _.duration.median(), ttl_streams = _.streams.sum())\n)\n\n\n\n\n\nmedian_duration\nttl_streams\n\n\n\n\n0\n201.084\n3018225255\n\n\n\n\n1 rows × 2 columns\n\n\n\n\nWhat is the median duration?\n\n\n205.990\n\nIncorrect\n\n\n\n65.631\n\nIncorrect\n\n\n\n201.084\n\nThat’s right!\n\n\n\n851.871\n\nIncorrect\n\nAdd a second argument to summarize, which calculates the sum of streams. How large is it?\n\n\n30,182,252\n\nIncorrect\n\n\n\n301,822,525\n\nThat’s right!\n\n\n\n451,822,525\n\nIncorrect\n\n\n\n45,182,252\n\nIncorrect\n\n\n\nExercise 2:\nUse verbs you learned in chapter 1 to do the following:\n\nfind the track with the lowest duration\nsubset the data to keep only the row for that track\n\n(Note, you may need to run code multiple times)\n\n(music_top200\n\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n0\nArgentina\n1\nTusa\nKAROL G\n1858666\n200.960\nAmericas\n\n\n1\nArgentina\n2\nTattoo\nRauw Alejandro\n1344382\n202.887\nAmericas\n\n\n2\nArgentina\n3\nHola - Remix\nDalex\n1330011\n249.520\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n12397\nSouth Africa\n198\nBlack And White\nNiall Horan\n11771\n193.090\nAfrica\n\n\n12398\nSouth Africa\n199\nWhen I See U\nFantasia\n11752\n217.347\nAfrica\n\n\n12399\nSouth Africa\n200\nPsycho!\nMASN\n11743\n197.217\nAfrica\n\n\n\n\n12400 rows × 7 columns\n\n\nNow, use summarize to calculate the min duration, and the max duration directly.\n\n(music_top200\n\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n0\nArgentina\n1\nTusa\nKAROL G\n1858666\n200.960\nAmericas\n\n\n1\nArgentina\n2\nTattoo\nRauw Alejandro\n1344382\n202.887\nAmericas\n\n\n2\nArgentina\n3\nHola - Remix\nDalex\n1330011\n249.520\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n12397\nSouth Africa\n198\nBlack And White\nNiall Horan\n11771\n193.090\nAfrica\n\n\n12398\nSouth Africa\n199\nWhen I See U\nFantasia\n11752\n217.347\nAfrica\n\n\n12399\nSouth Africa\n200\nPsycho!\nMASN\n11743\n197.217\nAfrica\n\n\n\n\n12400 rows × 7 columns\n\n\nWhy would you use summarize like this, rather than the arrange and filter approach?\n\n\nThe min and max values might be in different observations (rows).\n\nThat’s right. Filter keeps specific rows, but summarize can collect values from across rows.\n\n\n\nIt keeps more of the original data.\n\nTry again. Filter keeps all the variables (columns), while summarize will remove most of them.\n\n\n\nThe arrange and filter approach can do anything summarize can.\n\nTry again.\n\n\n\nExercise 3:\nThe examples below show what happens verbs like filter and mutate use methods like .mean().\n\n# create column for average streams\n(music_top200\n  &gt;&gt; mutate(avg_streams = _.streams.mean())\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\navg_streams\n\n\n\n\n0\nArgentina\n1\nTusa\nKAROL G\n1858666\n200.960\nAmericas\n243405.2625\n\n\n1\nArgentina\n2\nTattoo\nRauw Alejandro\n1344382\n202.887\nAmericas\n243405.2625\n\n\n2\nArgentina\n3\nHola - Remix\nDalex\n1330011\n249.520\nAmericas\n243405.2625\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n12397\nSouth Africa\n198\nBlack And White\nNiall Horan\n11771\n193.090\nAfrica\n243405.2625\n\n\n12398\nSouth Africa\n199\nWhen I See U\nFantasia\n11752\n217.347\nAfrica\n243405.2625\n\n\n12399\nSouth Africa\n200\nPsycho!\nMASN\n11743\n197.217\nAfrica\n243405.2625\n\n\n\n\n12400 rows × 8 columns\n\n\n\n# keep observations where streams are above average\n(music_top200\n  &gt;&gt; filter(_.streams &lt; _.streams.mean())\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n108\nArgentina\n109\nMe Gusta\nCiro y los Persas\n243159\n289.093\nAmericas\n\n\n109\nArgentina\n110\nTal Vez\nPaulo Londra\n242870\n264.483\nAmericas\n\n\n110\nArgentina\n111\nPhysical\nDua Lipa\n239225\n193.829\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n12397\nSouth Africa\n198\nBlack And White\nNiall Horan\n11771\n193.090\nAfrica\n\n\n12398\nSouth Africa\n199\nWhen I See U\nFantasia\n11752\n217.347\nAfrica\n\n\n12399\nSouth Africa\n200\nPsycho!\nMASN\n11743\n197.217\nAfrica\n\n\n\n\n9341 rows × 7 columns\n\n\nBased on the examples above, can you use only the filter verb to get the most streamed song in all the data?\n\n# modify the filter verb below\n\n(music_top200\n  &gt;&gt; filter()\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n0\nArgentina\n1\nTusa\nKAROL G\n1858666\n200.960\nAmericas\n\n\n1\nArgentina\n2\nTattoo\nRauw Alejandro\n1344382\n202.887\nAmericas\n\n\n2\nArgentina\n3\nHola - Remix\nDalex\n1330011\n249.520\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n12397\nSouth Africa\n198\nBlack And White\nNiall Horan\n11771\n193.090\nAfrica\n\n\n12398\nSouth Africa\n199\nWhen I See U\nFantasia\n11752\n217.347\nAfrica\n\n\n12399\nSouth Africa\n200\nPsycho!\nMASN\n11743\n197.217\nAfrica\n\n\n\n\n12400 rows × 7 columns\n\n\n\n\n\n\n\n\nShow solution\n\n\n\n\n\n(music_top200\n  &gt;&gt; filter(_.streams == _.streams.max())\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n7800\nUnited States\n1\nThe Box\nRoddy Ricch\n12987027\n196.653\nAmericas\n\n\n\n\n1 rows × 7 columns\n\n\n\n\n\n\nWhat is the most streamed song?\n\nThe Box by Roddy Ricch"
  },
  {
    "objectID": "code/01c-arrange.html",
    "href": "code/01c-arrange.html",
    "title": "Arrange",
    "section": "",
    "text": "Click here to open the slides full screen.\n\nfrom setup import ___\n\nfrom siuba import *\nfrom plotnine import *\n\nfrom music_top200 import music_top200, track_features\n\n\nExercise 1:\nModify the code below to arrange by artist name in descending order.\n\n\nhint\n\n\nYou can sort something in descending order, using the - operator.\n\n\n\nanother hint\n\n\nStart by using the pipe operator with arrange(). You will need to specify what to arrange by.\n\n\n\n\n(music_top200\n\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n0\nArgentina\n1\nTusa\nKAROL G\n1858666\n200.960\nAmericas\n\n\n1\nArgentina\n2\nTattoo\nRauw Alejandro\n1344382\n202.887\nAmericas\n\n\n2\nArgentina\n3\nHola - Remix\nDalex\n1330011\n249.520\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n12397\nSouth Africa\n198\nBlack And White\nNiall Horan\n11771\n193.090\nAfrica\n\n\n12398\nSouth Africa\n199\nWhen I See U\nFantasia\n11752\n217.347\nAfrica\n\n\n12399\nSouth Africa\n200\nPsycho!\nMASN\n11743\n197.217\nAfrica\n\n\n\n\n12400 rows × 7 columns\n\n\n\n\n\n\n\n\nShow solution\n\n\n\n\n\n(music_top200\n  &gt;&gt; arrange(-_.artist)\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n11783\nTaiwan, Province of China\n184\n一天 (電視劇《想見你》插曲)\n黃宣\n41615\n248.630\nAsia\n\n\n4797\nHong Kong\n198\nWithout You\n高爾宣 OSN\n19956\n175.500\nAsia\n\n\n10745\nSingapore\n146\nWithout You\n高爾宣 OSN\n57383\n175.500\nAsia\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n9737\nPhilippines\n138\nThis I Promise You\n*NSYNC\n196170\n283.507\nAsia\n\n\n11394\nThailand\n195\nLION\n(G)I-DLE\n44329\n210.973\nAsia\n\n\n7153\nLatvia\n154\nGOSHA\n$NOT\n5849\n120.000\nEurope\n\n\n\n\n12400 rows × 7 columns\n\n\n\n\nWhat artist is the last observation (row) in the result?\n\n\n$NOT\n\nGreat job!\n\n\n\n黃宣\n\nThat’s not right. Did you arrange in ascending, rather than descending order?\n\n\n\nAaron Smith\n\nIncorrect\n\n\n\nY2K\n\nIncorrect\n\n\n\nExercise 2:\nWhat is the first track, if you filter to keep only observations from the country Mexico, and then sort in ascending order by track name?\n\n(music_top200\n  &gt;&gt; ___\n  &gt;&gt; arrange(___)\n)\n\n⚠️: Don't forget to replace all the blanks!\n\n\n\n\n\n\n\n\nShow solution\n\n\n\n\n\n(music_top200\n  &gt;&gt; filter(_.country == \"Mexico\")\n  &gt;&gt; arrange(_.track_name)\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n8263\nMexico\n64\n11 PM\nMaluma\n1160043\n175.733\nAmericas\n\n\n8233\nMexico\n34\n25/8\nBad Bunny\n1781488\n243.276\nAmericas\n\n\n8356\nMexico\n157\n7 rings\nAriana Grande\n660372\n178.640\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n8291\nMexico\n92\nbad guy\nBillie Eilish\n958347\n194.088\nAmericas\n\n\n8329\nMexico\n130\ndeath bed (coffee for your head) (feat. beabadoobee)\nPowfu\n765591\n173.333\nAmericas\n\n\n8337\nMexico\n138\neverything i wanted\nBillie Eilish\n721895\n245.426\nAmericas\n\n\n\n\n200 rows × 7 columns\n\n\n\n\n\n\n11 PM\n\nGreat job!\n\n\n\n一天 (電視劇《想見你》插曲)\n\nIncorrect\n\n\n\neverything i wanted\n\nIncorrect\n\n\n\n#24\n\nBe sure to filter where country is Mexico\n\n\n\nExercise 3:\nBelow is code with the arrange verb removed. Modify it to arrange in ascending order..\n\nfirst by position\nsecond by streams\n\n\n(music_top200\n  &gt;&gt; ___\n)\n\n⚠️: Don't forget to replace all the blanks!\n\n\n\n\n\n\n\n\nShow solution\n\n\n\n\n\n(music_top200\n  &gt;&gt; arrange(_.position, _.streams)\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n8000\nCyprus\n1\nThe Box\nRoddy Ricch\n13604\n196.653\nAsia\n\n\n7200\nMalta\n1\nBlinding Lights\nThe Weeknd\n21416\n201.573\nEurope\n\n\n6800\nLuxembourg\n1\nBlinding Lights\nThe Weeknd\n22509\n201.573\nEurope\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1399\nBrazil\n200\nProcuro Alguém (prod. Coyote Beatz)\nDjonga\n542021\n213.983\nAmericas\n\n\n8399\nMexico\n200\nVerte Ir\nDJ Luian\n558925\n267.500\nAmericas\n\n\n7999\nUnited States\n200\nEnemies (feat. DaBaby)\nPost Malone\n1597824\n196.760\nAmericas\n\n\n\n\n12400 rows × 7 columns\n\n\n\n\nWhat country has the position 1 track (The Box) with fewest streams?\n\n\nCyprus\n\nThat’s right! Make sure to double check that the track is named The Box by Roddy Ricch.\n\n\n\nUnited States\n\nIncorrect\n\n\n\nBrazil\n\nIncorrect\n\n\n\nLuxembourg\n\nIncorrect\n\n\n\nExercise 4\nWhat’s the shortest song in the top position in the music_top200 data?\n\n# add code below this line\n\n\n\n\n\n\n\nShow solution\n\n\n\n\n\n# NOTE: there are multiple ways to get the answer!\n(music_top200\n  &gt;&gt; arrange(_.position, _.duration)\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n2600\nGermany\n1\nBad Girls, Good Vibes\nUfo361\n4081472\n107.446\nEurope\n\n\n4400\nGreece\n1\nDrip\nSnik\n367041\n147.429\nEurope\n\n\n2000\nColombia\n1\nRojo\nJ Balvin\n997830\n150.720\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n11999\nUruguay\n200\nCreo\nCallejeros\n11300\n289.760\nAmericas\n\n\n3999\nFinland\n200\nWithout Me\nEminem\n40460\n290.320\nEurope\n\n\n4399\nUnited Kingdom\n200\nAfrica\nTOTO\n334637\n295.893\nEurope\n\n\n\n\n12400 rows × 7 columns\n\n\n\n\n\n\nBad Girls, Good Vibes\n\nThat’s right!\n\n\n\nKlop Klop\n\nIncorrect. This is the shortest track in any position. Can you sort to get top position tracks first?\n\n\n\nSusamam\n\nIncorrect. This is the longest track in any position. Can you sort to get top position tracks first?\n\n\n\nBlockparty\n\nIncorrect. This is the shortest track in the last position."
  },
  {
    "objectID": "code/02d-facets.html",
    "href": "code/02d-facets.html",
    "title": "Facets",
    "section": "",
    "text": "Click here to open the slides full screen.\n\nfrom setup import ___\n\nfrom siuba import *\nfrom plotnine import *\n\nfrom music_top200 import music_top200, track_features\n\n\nExercise 1:\nTake a look at plotnine’s documentation for facet_wrap.\nNotice that the Parameters section lists ncol and nrow options. These determine how many columns or rows to use. For example, the plot below has nrow = 1.\nTry out the plot as is, and with the nrow argument changed to ncol = 1. Then, answer the questions below.\n\n# This code keeps the 3 artists listed ----\nartists_to_keep = [\"Billie Eilish\", \"ITZY\", \"Roddy Ricch\"]\n\nsome_artists = (\n  track_features\n  &gt;&gt; filter(_.artist.isin(artists_to_keep))\n)\n\n# This code plots the data ----\n(some_artists\n  &gt;&gt; ggplot(aes(\"energy\", \"valence\", color = \"artist\"))\n   + geom_point()\n   + facet_wrap(\"~artist\", nrow = 1)\n   + labs(title = \"Song features across 3 artists\")\n)\n\n\n\n\nWhich of the three artists tends to have the lowest valence?\n\n\nBillie Eilish\n\nCorrect! We’ll discuss how to measure the idea of “tends to have” in the next chapter.\n\n\n\nITZY\n\nThat’s not right. This artist tends to have the highest valence.\n\n\n\nRoddy Ricch\n\nThat’s not right. Look for the cluster of points toward the bottom of the plot.\n\nWhich value seems easier to compare across facets, when ncol is set to 1?\n\n\nanswer\n\nThis is subjective, but I would say energy is easier to compare, since there is only one x-axis for across all plots. (For example, there is a only one spot on the x-axis where energy is .25).\n\n\n\nExercise 2:\nplotnine also has a function called facet_grid. Based on the docs, can you think of a situation where you’d use facet_grid() over facet_wrap()?\nHere is a code block to experiment."
  },
  {
    "objectID": "code/04b-barcharts.html",
    "href": "code/04b-barcharts.html",
    "title": "Bar plots",
    "section": "",
    "text": "from setup import *\nfrom setup import ___, _\n\nimport slides from ‘../slides/03c-slides.markdown’\n&lt;RevealSlides :slides=“slides” /&gt;"
  },
  {
    "objectID": "code/01f-wrap-up.html",
    "href": "code/01f-wrap-up.html",
    "title": "Wrap up",
    "section": "",
    "text": "Putting it together\nThis lesson shows what the beginning of an analysis might look like. Generally, data analysis is done in notebooks, like this one. In a notebook, you can alternate between blocks of code and narrative text.\nThe first part of an analysis is often importing tools you will need for the analysis. For example, verbs like filter and mutate are imported from siuba.\nThe imports for this analysis are shown below.\n\n# this is a special object, we use for blanks in exercises!\nfrom setup import ___\n\n# here we import verbs like filter, arrange, and mutate from siuba.\n# the import * means to import all of siuba's verbs.\nfrom siuba import *\n\n# here we import everything for plotting from plotnine (like ggplot())\nfrom plotnine import *\n\n# here we import the data for the course\n# note that rather than using * to get everything, you can name\n# specific things to import (like track_features)\nfrom music_top200 import music_top200, track_features\n\n\n\nExercise 1:\nFor the artist with the top track in Spain, what country has the most streams for one of their tracks?\nNote: you may need to write and run code multiple times.\n\n\nhint\n\n\nFirst, find the artist in the top position in Spain. After, can you get only that artists tracks? Once you do that you should be close!\n\n\n\n# getting most streamed track for top artist in Spain\n(\n\n\n)\n\n()\n\n\n\n\n\n\n\n\nShow solution\n\n\n\n\n\n# Note: I would run the pipe with...\n#   * only the commented out filter first, to get the artist (KAROL G)\n#   * then, with the uncommented filter and arrange\n(music_top200 \n  # &gt;&gt; filter(_.country == \"Spain\")\n  &gt;&gt; filter(_.artist == \"KAROL G\")\n  &gt;&gt; arrange(-_.streams)\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n8204\nMexico\n5\nTusa\nKAROL G\n4830583\n200.96\nAmericas\n\n\n3600\nSpain\n1\nTusa\nKAROL G\n3295893\n200.96\nEurope\n\n\n7897\nUnited States\n98\nTusa\nKAROL G\n2385525\n200.96\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n3563\nEstonia\n164\nTusa\nKAROL G\n4681\n200.96\nEurope\n\n\n7265\nMalta\n66\nTusa\nKAROL G\n3732\n200.96\nEurope\n\n\n8095\nCyprus\n96\nTusa\nKAROL G\n2168\n200.96\nAsia\n\n\n\n\n40 rows × 7 columns\n\n\n\n\n\n\nExercise 2:\nSubset to keep only tracks in Hong Kong, then calculate a new column called stream_seconds, that’s equal to streams times their duration.\nOnce you’ve done that, try deleting the comments (#) in the code below to plot the data.\n\n(music_top200\n  &gt;&gt; ___\n  &gt;&gt; ___\n  #&gt;&gt; ggplot(aes(\"stream_seconds\", \"position\", color = \"duration\"))\n  # + geom_point()\n)\n\n⚠️: Don't forget to replace all the blanks!\n\n\n\n\n\n\n\n\nShow solution\n\n\n\n\n\n(music_top200\n  &gt;&gt; filter(_.country == \"Hong Kong\")\n  &gt;&gt; mutate(stream_seconds = _.streams * _.duration)\n  &gt;&gt; ggplot(aes(\"stream_seconds\", \"position\", color = \"duration\"))\n   + geom_point()\n)"
  },
  {
    "objectID": "code/01d-mutate.html",
    "href": "code/01d-mutate.html",
    "title": "Mutate",
    "section": "",
    "text": "Click here to open the slides full screen.\n\nfrom setup import ___\n\nfrom siuba import *\nfrom plotnine import *\n\nfrom music_top200 import music_top200, track_features\n\n\nExercise 0:\nDelete the # symbol on the line # music_top200. This symbol is called a comment, and causes everything to the right of it to be ignored.\n\n# I am a helpful note. I am not code!\n\n# music_top200\n\n\n\nExercise 1:\nCurrently, the duration is calculated in seconds.\n\nDelete (uncomment) the # symbol in the code.\nComplete the code to convert duration to milliseconds.\n\n\n\nhint\n\n\nDelete the # symbol. This is called a comment. When it is the first non-blank on a line, it stops that line from being run.\n\n\n1 second is 1000 milliseconds. So you would multiply the duration by 1000.\n\n\n\n(music_top200\n  # &gt;&gt; mutate(___ = ___)\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n0\nArgentina\n1\nTusa\nKAROL G\n1858666\n200.960\nAmericas\n\n\n1\nArgentina\n2\nTattoo\nRauw Alejandro\n1344382\n202.887\nAmericas\n\n\n2\nArgentina\n3\nHola - Remix\nDalex\n1330011\n249.520\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n12397\nSouth Africa\n198\nBlack And White\nNiall Horan\n11771\n193.090\nAfrica\n\n\n12398\nSouth Africa\n199\nWhen I See U\nFantasia\n11752\n217.347\nAfrica\n\n\n12399\nSouth Africa\n200\nPsycho!\nMASN\n11743\n197.217\nAfrica\n\n\n\n\n12400 rows × 7 columns\n\n\n\n(music_top200\n  &gt;&gt; mutate(duration_ms = _.duration * 1000)\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\nduration_ms\n\n\n\n\n0\nArgentina\n1\nTusa\nKAROL G\n1858666\n200.960\nAmericas\n200960.0\n\n\n1\nArgentina\n2\nTattoo\nRauw Alejandro\n1344382\n202.887\nAmericas\n202887.0\n\n\n2\nArgentina\n3\nHola - Remix\nDalex\n1330011\n249.520\nAmericas\n249520.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n12397\nSouth Africa\n198\nBlack And White\nNiall Horan\n11771\n193.090\nAfrica\n193090.0\n\n\n12398\nSouth Africa\n199\nWhen I See U\nFantasia\n11752\n217.347\nAfrica\n217347.0\n\n\n12399\nSouth Africa\n200\nPsycho!\nMASN\n11743\n197.217\nAfrica\n197217.0\n\n\n\n\n12400 rows × 8 columns\n\n\n\n\nExercise 2:\nUncomment the mutate in the pipe below. Can you fix the two errors in it?\nIt should return data with a new column on the right, that divides position by 200.\n\n(music_top200\n  # &gt;&gt; mutate(new position = position / 200)\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n0\nArgentina\n1\nTusa\nKAROL G\n1858666\n200.960\nAmericas\n\n\n1\nArgentina\n2\nTattoo\nRauw Alejandro\n1344382\n202.887\nAmericas\n\n\n2\nArgentina\n3\nHola - Remix\nDalex\n1330011\n249.520\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n12397\nSouth Africa\n198\nBlack And White\nNiall Horan\n11771\n193.090\nAfrica\n\n\n12398\nSouth Africa\n199\nWhen I See U\nFantasia\n11752\n217.347\nAfrica\n\n\n12399\nSouth Africa\n200\nPsycho!\nMASN\n11743\n197.217\nAfrica\n\n\n\n\n12400 rows × 7 columns\n\n\n\n\n\n\n\n\nShow solution\n\n\n\n\n\n(music_top200\n  &gt;&gt; mutate(new_position = _.position / 200)\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\nnew_position\n\n\n\n\n0\nArgentina\n1\nTusa\nKAROL G\n1858666\n200.960\nAmericas\n0.005\n\n\n1\nArgentina\n2\nTattoo\nRauw Alejandro\n1344382\n202.887\nAmericas\n0.010\n\n\n2\nArgentina\n3\nHola - Remix\nDalex\n1330011\n249.520\nAmericas\n0.015\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n12397\nSouth Africa\n198\nBlack And White\nNiall Horan\n11771\n193.090\nAfrica\n0.990\n\n\n12398\nSouth Africa\n199\nWhen I See U\nFantasia\n11752\n217.347\nAfrica\n0.995\n\n\n12399\nSouth Africa\n200\nPsycho!\nMASN\n11743\n197.217\nAfrica\n1.000\n\n\n\n\n12400 rows × 8 columns\n\n\n\n\n\n\nExercise 3:\nThe mutate below uses code from a future chapter to calculate how many letters are in each artist’s name.\nWhich artist with the shortest name has the most streams?\n\n\nhint\n\n\nYou’ll need to use an arrange in the pipe with 2 arguments.\n\n\n\n(music_top200\n  &gt;&gt; mutate(artist_length = _.artist.str.len())\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\nartist_length\n\n\n\n\n0\nArgentina\n1\nTusa\nKAROL G\n1858666\n200.960\nAmericas\n7\n\n\n1\nArgentina\n2\nTattoo\nRauw Alejandro\n1344382\n202.887\nAmericas\n14\n\n\n2\nArgentina\n3\nHola - Remix\nDalex\n1330011\n249.520\nAmericas\n5\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n12397\nSouth Africa\n198\nBlack And White\nNiall Horan\n11771\n193.090\nAfrica\n11\n\n\n12398\nSouth Africa\n199\nWhen I See U\nFantasia\n11752\n217.347\nAfrica\n8\n\n\n12399\nSouth Africa\n200\nPsycho!\nMASN\n11743\n197.217\nAfrica\n4\n\n\n\n\n12400 rows × 8 columns\n\n\n\n\n\n\n\n\nShow solution\n\n\n\n\n\n(music_top200\n  &gt;&gt; mutate(artist_length = _.artist.str.len())\n  &gt;&gt; arrange(_.artist_length, -_.streams)\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\nartist_length\n\n\n\n\n5256\nIndonesia\n57\nSweet Night\nV\n529806\n214.259\nAsia\n1\n\n\n9666\nPhilippines\n67\nSweet Night\nV\n313660\n214.259\nAsia\n1\n\n\n5880\nIndia\n81\nSweet Night\nV\n230745\n214.259\nAsia\n1\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n8366\nMexico\n167\nEscondidos\nLa Adictiva Banda San José de Mesillas\n635158\n191.893\nAmericas\n38\n\n\n11193\nEl Salvador\n194\nEn Peligro de Extinción\nLa Adictiva Banda San José de Mesillas\n11447\n234.198\nAmericas\n38\n\n\n180\nArgentina\n181\nUn Poco de Amor Francés\nPatricio Rey y sus Redonditos de Ricota\n178678\n206.200\nAmericas\n39\n\n\n\n\n12400 rows × 8 columns\n\n\n\n\n\n\nV, for their track in Indonesia\n\nThat’s right!\n\n\n\nV, for their track in Hong Kong\n\nThat’s the right artist, but did you sort by most streams first?\n\n\n\nF, for their track in Finland\n\nIncorrect. Did you sort by most streams first?\n\n\n\nF, for their track in Hong Kong\n\nIncorrect. Did you sort by most streams first?"
  },
  {
    "objectID": "code/01b-filter.html",
    "href": "code/01b-filter.html",
    "title": "Filter",
    "section": "",
    "text": "Click here to open the slides full screen.\n\nfrom setup import ___\n\nfrom siuba import *\nfrom plotnine import *\n\nfrom music_top200 import music_top200, track_features\n\n\nExercise 1:\nThe code below is filtering to keep only hits where country is United States. Change the filter to get hits from Canada.\n\n(music_top200\n  &gt;&gt; filter(_.country == \"United States\")\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n7800\nUnited States\n1\nThe Box\nRoddy Ricch\n12987027\n196.653\nAmericas\n\n\n7801\nUnited States\n2\nMyron\nLil Uzi Vert\n9163134\n224.955\nAmericas\n\n\n7802\nUnited States\n3\nBlueberry Faygo\nLil Mosey\n8043475\n162.547\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n7997\nUnited States\n198\nLights Up\nHarry Styles\n1606234\n172.227\nAmericas\n\n\n7998\nUnited States\n199\nWithout Me\nHalsey\n1606153\n201.661\nAmericas\n\n\n7999\nUnited States\n200\nEnemies (feat. DaBaby)\nPost Malone\n1597824\n196.760\nAmericas\n\n\n\n\n200 rows × 7 columns\n\n\n\n\n\n\n\n\nShow solution\n\n\n\n\n\n(music_top200\n  &gt;&gt; filter(_.country == \"Canada\")\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n1400\nCanada\n1\nThe Box\nRoddy Ricch\n1662638\n196.653\nAmericas\n\n\n1401\nCanada\n2\nDance Monkey\nTones And I\n1287622\n209.755\nAmericas\n\n\n1402\nCanada\n3\nBlinding Lights\nThe Weeknd\n1233608\n201.573\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1597\nCanada\n198\nEnvy Me\nCalboy\n211725\n120.137\nAmericas\n\n\n1598\nCanada\n199\nInto the Unknown\nIdina Menzel\n211633\n194.848\nAmericas\n\n\n1599\nCanada\n200\nDancing With A Stranger (with Normani)\nSam Smith\n210840\n171.030\nAmericas\n\n\n\n\n200 rows × 7 columns\n\n\n\n\nComparing results, which artist is in the top 3 in both (the) United States and Canada?\n\n\nRoddy Ricch\n\nNailed it!\n\n\n\nThe Weeknd\n\nThat artist is only top 3 in the United States\n\n\n\nTones and I\n\nThat artist is only top 3 in the Canada\n\n\n\nExercise 2:\n\nFilter to keep tracks where position equals 5.\n\n\n(music_top200\n  &gt;&gt; filter(___)\n)\n\n⚠️: Don't forget to replace all the blanks!\n\n\n\n\n\n\n\n\nShow solution\n\n\n\n\n\n(music_top200\n  &gt;&gt; filter(_.position == 5)\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n4\nArgentina\n5\nLa Difícil\nBad Bunny\n1205852\n163.084\nAmericas\n\n\n204\nAustria\n5\nDance Monkey\nTones And I\n162646\n209.755\nEurope\n\n\n404\nAustralia\n5\nThe Box\nRoddy Ricch\n1330929\n196.653\nOceania\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n11804\nUruguay\n5\nHola - Remix\nDalex\n77471\n249.520\nAmericas\n\n\n12004\nViet Nam\n5\nBlack Swan\nBTS\n109112\n198.261\nAsia\n\n\n12204\nSouth Africa\n5\nGodzilla (feat. Juice WRLD)\nEminem\n58462\n210.800\nAfrica\n\n\n\n\n62 rows × 7 columns\n\n\n\n\nWhich artist is in position 5 in South Africa?\n\n\nBad Bunny\n\nIncorrect\n\n\n\nEminem\n\nThat’s right!\n\n\n\nBTS\n\nIncorrect\n\n\n\nSelena Gomes\n\nIncorrect\n\n\n\nExercise 3:\nFind the top 5 songs in the country Hong Kong.\nIn the slides we discussed the == operator. Here is a longer list of some options!\n\n\n\noperator\nmeaning\n\n\n\n\n==\nis equal to\n\n\n&lt;\nis less than\n\n\n&gt;\nis greater than\n\n\n\n\n(music_top200\n  &gt;&gt; filter(___, ___)\n)\n\n⚠️: Don't forget to replace all the blanks!\n\n\n\n\n\n\n\n\nShow solution\n\n\n\n\n\n(music_top200\n  &gt;&gt; filter(_.country == \"Hong Kong\", _.position &lt; 6)\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n4600\nHong Kong\n1\nWANNABE\nITZY\n112648\n191.242\nAsia\n\n\n4601\nHong Kong\n2\nIntentions (feat. Quavo)\nJustin Bieber\n104467\n212.867\nAsia\n\n\n4602\nHong Kong\n3\nSeñorita\nShawn Mendes\n84196\n190.960\nAsia\n\n\n4603\nHong Kong\n4\nDon't Start Now\nDua Lipa\n80457\n183.290\nAsia\n\n\n4604\nHong Kong\n5\nDance Monkey\nTones And I\n79376\n209.755\nAsia\n\n\n\n\n5 rows × 7 columns\n\n\n\n\n\n\nExercise 4: looking at The Weeknd’s streams\nHow many times has the artist The Weeknd had over 1,000,000 streams?\n\n\nHint:\n\nDo in steps. Run first to get all rows where the artist is The Weeknd, and then modify your code to get where he has over 1,000,000 streams.\n\n\n(\n\n)\n\n()\n\n\n\n\n\n\n\n\nShow solution\n\n\n\n\n\n(music_top200\n  &gt;&gt; filter(_.artist == \"The Weeknd\", _.streams &gt; 1000000)\n)\n\n\n\n\n\ncountry\nposition\ntrack_name\nartist\nstreams\nduration\ncontinent\n\n\n\n\n400\nAustralia\n1\nBlinding Lights\nThe Weeknd\n1757343\n201.573\nOceania\n\n\n1248\nBrazil\n49\nBlinding Lights\nThe Weeknd\n1343243\n201.573\nAmericas\n\n\n1402\nCanada\n3\nBlinding Lights\nThe Weeknd\n1233608\n201.573\nAmericas\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n7841\nUnited States\n42\nAfter Hours\nThe Weeknd\n3672033\n361.027\nAmericas\n\n\n7906\nUnited States\n107\nHeartless\nThe Weeknd\n2265446\n200.080\nAmericas\n\n\n8210\nMexico\n11\nBlinding Lights\nThe Weeknd\n3785306\n201.573\nAmericas\n\n\n\n\n13 rows × 7 columns"
  },
  {
    "objectID": "code/02b-geoms.html",
    "href": "code/02b-geoms.html",
    "title": "Geoms",
    "section": "",
    "text": "Click here to open the slides full screen.\n\nfrom setup import ___\n\nfrom siuba import *\nfrom plotnine import *\n\nfrom music_top200 import music_top200, track_features\n\n\nExercise 1:\nThe code below uses geom_text(). Try changing options and then re-running the code, in order to get a readable plot. Then, answer the questions underneath the plot.\nOptions to set:\n\nChange size = 11 to size = 5. Try out sizes 7 and 14.\nChange horizontal align from ha = \"center\" to ha = \"left\".\n\nHow about \"right\"?\n\nChange nudge from nudge_y = 0 to nudge_y = .05, or nudge_x = .05.\n\nWhat about -.05?\n\n\nCode\n\n(track_features\n  &gt;&gt; filter(_.artist == \"Queen\")\n  &gt;&gt; ggplot(aes(\"energy\", \"valence\", label = \"track_name\"))\n    + geom_point()\n    + geom_text(size = 11, ha = \"center\", nudge_y = 0)\n)\n\n\n\n\n\nBelow are three songs at different corners of the graph. Can you tell whether they have high or low energy? Valence? Which do you think has low energy and low valence?\n\n\n\n\nHammer to Fall\n\n\n\n\n\n\nCrazy Little Thing Called Love\n\n\n\n\n\n\nLove of My Life\n\n\n\n\n\n\n\nExercise 2:\nThis exercise is a case study on selecting extreme differences between two features, such as energy and acousticness.\nAt the end of the case study, you’ll be prompted to add code!\nGenerally tracks with higher energy tend to be less acoustic, as shown in the plot below.\n\n(track_features\n  &gt;&gt; filter(_.popularity &gt; 33)\n  &gt;&gt; ggplot(aes(\"energy\", \"acousticness\"))\n   + geom_point()\n)\n\n\n\n\nBut notice that in the plot above, there’s a point in the top right, that is high energy and high acousticness.\nIn order to find high energy and acousticness songs like this, I used the following code.\n\n(track_features\n  &gt;&gt; filter(_.energy &gt; .9, _.popularity &gt; 33)\n  &gt;&gt; arrange(-_.acousticness)\n)\n\n\n\n\n\nartist\nalbum\ntrack_name\nenergy\nvalence\ndanceability\nspeechiness\nacousticness\npopularity\nduration\n\n\n\n\n23989\nMC Kevin o Chris\nVamos pra Gaiola\nVamos pra Gaiola\n0.971\n0.521\n0.872\n0.2810\n0.917000\n61\n161.600\n\n\n5210\nScHoolboy Q\nCrasH Talk\nBlack Folk\n0.902\n0.400\n0.734\n0.3960\n0.831000\n51\n147.040\n\n\n24928\nMC Kevin o Chris\nEu Vou pro Baile da Gaiola\nEu Vou pro Baile da Gaiola\n0.957\n0.642\n0.832\n0.1050\n0.824000\n52\n123.220\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n18950\nFoo Fighters\nThere Is Nothing Left To Lose\nLearn to Fly\n0.919\n0.537\n0.465\n0.0408\n0.000018\n74\n235.293\n\n\n20424\nFoo Fighters\nOne By One (Expanded Edition)\nTimes Like These\n0.908\n0.265\n0.377\n0.0899\n0.000014\n68\n265.560\n\n\n21870\nTurmion Kätilöt\nGlobal Warning\nJumalauta\n0.939\n0.549\n0.454\n0.0618\n0.000010\n42\n210.107\n\n\n\n\n812 rows × 10 columns\n\n\nCan you plot songs by MC Kevin o Chris, with both points and text?\n\n(track_features\n  &gt;&gt; filter(_.artist == \"MC Kevin o Chris\")\n  &gt;&gt; ___\n)\n\n⚠️: Don't forget to replace all the blanks!\n\n\nWhy do you think Vamos pra Gaiola is high energy and high acousticness?\n\n\n\n\nanswer\n\nMy best guess is because the drums are done by a persons voice, there are few instruments, but it is still a pretty fast tempo. It would be interesting to look at their other tracks for a comparison.\n\nCan you modify each code block in the case study to be about high energy and low danceability songs?"
  },
  {
    "objectID": "code/99e-select.html",
    "href": "code/99e-select.html",
    "title": "Select",
    "section": "",
    "text": "from setup import *\nfrom setup import ___, _\n\n\n\nTODO: fill in explanation\n\n(music_top200\n  &gt;&gt; select(_.country, _.position, _.track_name, _.artist, _.energy)\n)\n\n\n\nMake a small change the select below to remove the column country_code from the data, rather than include it.\n\n(music_top200\n  &gt;&gt; select(_.country_code)\n)\n\n\n\n\nModify the code below to first arrange by number of streams, and then select country and artist\n\n# combine select and arrange (what happens when try to arrange column that's selected out);\n# (cont.) have comment out select, why does it work now?\n(music_top200\n  &gt;&gt; ___\n  &gt;&gt; ___\n)"
  },
  {
    "objectID": "code/99e-select.html#select",
    "href": "code/99e-select.html#select",
    "title": "Select",
    "section": "",
    "text": "TODO: fill in explanation\n\n(music_top200\n  &gt;&gt; select(_.country, _.position, _.track_name, _.artist, _.energy)\n)\n\n\n\nMake a small change the select below to remove the column country_code from the data, rather than include it.\n\n(music_top200\n  &gt;&gt; select(_.country_code)\n)\n\n\n\n\nModify the code below to first arrange by number of streams, and then select country and artist\n\n# combine select and arrange (what happens when try to arrange column that's selected out);\n# (cont.) have comment out select, why does it work now?\n(music_top200\n  &gt;&gt; ___\n  &gt;&gt; ___\n)"
  },
  {
    "objectID": "code/04d-boxplot.html",
    "href": "code/04d-boxplot.html",
    "title": "Boxplots",
    "section": "",
    "text": "from setup import *\nfrom setup import ___, _\n\nimport slides from ‘../slides/03c-slides.markdown’\n&lt;RevealSlides :slides=“slides” /&gt;"
  }
]